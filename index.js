//–æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏
const express = require('express');
require('dotenv').config();
const app = express();
const TelegramBot = require('node-telegram-bot-api');
const fs = require('fs/promises');

//–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –º–æ–¥—É–ª–∏
const Database = require('./modules/database');
const { RandCode, WriteInLogFile, CreateState, TextDayFormat,
CreateButtons, ValidateMarkdown } = require('./modules/Other');
const config = require('./config.json');
const Time = require('./modules/Time');
const QRCode = require('qrcode');

//–æ—Å–Ω–æ–≤–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const PORT = process.env.PORT || 3030;
const TOKEN = process.env.BOT_TOKEN;
const BOT_USERNAME = process.env.BOT_USERNAME;
const ADMIN_TELEGRAM_ID = Number(process.env.ADMIN_TELEGRAM_ID);
const db = new Database('./database.db');
const states = [];

//—Å–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
const bot = new TelegramBot(TOKEN, { polling: true });

//—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫
String.prototype.format = function () {
    return this.replace(/ {2,}/g, ' ').replace(/((?=\n)\s+)|\n/g, '').replace(/\/n/g, '\n');
}

function escapeMarkdown(text) {
    // –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–∏–º–≤–æ–ª–æ–≤, —Ç—Ä–µ–±—É—é—â–∏—Ö —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Markdown
    return text.replace(/([_*[\]()`])/g, '\\$1');
}

//–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥
bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    WriteInLogFile(chatId);

    try{

        let invited_by_key;

        //–∫–æ–Ω—Ç—Ä–æ–ª—å –∫–æ–º–∞–Ω–¥—ã
        if(msg.text.indexOf('/start ') !== -1){
            const commandData = decodeCommand(msg.text);
            if(!commandData.invited_by) {
                return await handleCommand(commandData);
            }
            else {
                invited_by_key = commandData.invited_by;
            }
        }

        //–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const isNewUser = await authUser(msg.from, msg.text, invited_by_key);
        
        //–ø–æ–∏—Å–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        let state = states.find(state => state.chatId === chatId);

        //—á–∞—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if(state.chatId === ADMIN_TELEGRAM_ID && isNewUser){
            return bot.sendMessage(chatId, '*–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω* ‚úîÔ∏è\n\n–í–∞–º –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è üëá', state.options);
        }

        //–ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π
        if(isNewUser){
            return bot.sendMessage(chatId, config.start_message.format(), state.options);
        }

        // --- –ë–ª–æ–∫ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ ---

        //–≤–≤–æ–¥ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—å—Ç–∏—è
        if(state.action === 'add event'){
            return handleEventMenagment(state, msg.text);
        }

        //–≤–≤–æ–¥ –Ω–æ–≤–æ–≥–æ –º–µ—Ä—á–∞
        if(state.action === 'add merch'){
            return handleMerchMenagment(state, msg.text);
        }

        //–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏
        if(state.action === 'add mail'){
            return handleMailMenagment(state, msg.text);
        }

        //–æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–π —Å–∫–∏–¥–∫–∏
        if(state.action === 'add discount'){
            return handleDiscountMenagment(state, msg.text);
        }

        //–∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        if(state.action === 'edit start_message' && state.stepName === 'content'){
            return handleStartMessagePage(state, msg.text);
        }
        //–∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ–ø–ª–∞—Ç—ã
        if(state.action === 'edit payment_page' && state.stepName === 'content'){
            return handlePaymentPage(state, msg.text);
        }

        //–∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤–∫–ª–¥–∞–∫–∏ "–æ –Ω–∞—Å"
        if(state.action === 'edit about_us' && state.stepName === 'content'){
            return handleAboutUsPage(state, msg.text);
        }

        //—É—á–∞—Å—Ç–∏–µ –≤ —Å–æ–±—ã—Ç–∏–∏
        if(state.action === 'join event'){
            return handleJoinEvent(state, msg.text);
        }

        //–∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏
        if(state.action === 'set inv_discount'){
            return await handleEditDiscount(state, msg.text);
        }

        //–ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        bot.sendMessage(chatId, '‚ùì–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞', state.options);
    }
    catch(err){
        WriteInLogFile(err);
        bot.sendMessage(chatId, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ ‚úä');
    }
})

//–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
bot.on('callback_query', callback_handler);

//–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
async function callback_handler(msg){
    let chatId = msg.message.chat.id, state;

    try {

        //—Å—Ü–µ–Ω–∞—Ä–∏–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        await authUser(msg.from);

        //–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
        state = states.find(state => state.chatId === chatId);

        // ---------------------------- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ -----------------------------

        //–≤–∫–ª–∞–¥–∫–∞ "—Å–æ–±—ã—Ç–∏—è"
        if(msg.data === 'menage events' && state.action === 'default') {
            return await eventsMenageOptions(state);
        }

        //—É–¥–∞–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
        if(msg.data.indexOf('DeleteEvent') !== -1 && state.action === 'default'){
            const eventId = msg.data.split('=')[1];
            return await deleteEvent(state, eventId);
        }

        //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
        if(msg.data.indexOf('EditEvent') !== -1 && state.action === 'default') {
            const eventId = msg.data.split('=')[1];

            const existEvent = await db.find('events', [[{field: 'id', exacly: eventId}]], true);

            if(!existEvent){
                return await bot.sendMessage(chatId, '*–°–æ–±—ã—Ç–∏–µ –Ω–µ –Ω–∞–∏ÃÜ–¥–µ–Ω–æ* ‚úä', {parse_mode: 'Markdown'});
            }

            state.data.replaceEventId = eventId;
            msg.data = 'add event';
            return callback_handler(msg);
        }

        //–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
        if(msg.data === 'add event' && state.action === 'default') {
            //—Å—Ü–µ–Ω–∞—Ä–∏–π –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
            state.action = 'add event';

            //–∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã            
            const buttons = CreateButtons([{
                text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
                data: 'main menu'
            }])

            state.recordStep('title', '‚Ñπ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è', buttons);
            return state.executeLastStep();
        }

        //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
        if(msg.data === 'confirm new event' && state.action === 'add event') {
            return await confirmNewEvent(state);
        }

        //—Ä–∞—Å—Å—ã–ª–∫–∞ –Ω–æ–≤–æ–≥–æ –º–µ—Ä—á–∞
        if(msg.data === 'notify' && state.action === 'add event') {
            return await notifyEvent(state);
        }
    
        //—à–∞–≥ –Ω–∞–∑–∞–¥ –≤ —Å—Ü–µ–Ω–∞—Ä–∏–∏
        if(msg.data === 'step back' && state.action !== 'default' && state._steps.length > 1) {
            state.stepBack();
            state._actionHandleFunction(state);
            return;
        }

        // ---------------------------- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ -----------------------------
        
        //—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
        if(msg.data === 'stats' && state.action === 'default') {
            return await handleStatistics(state);
        }

        // ---------------------------- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º -----------------------------

        if(msg.data === 'menage offers' && state.action === 'default') {
            return await offersMenageOptions(state);
        }

        // ---------------------------- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ä—á–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç–∞—Ä—Ç–æ—Ä–æ–º -----------------------------

        //–≤–∫–ª–∞–¥–∫–∞ "–ú–µ—Ä—á–∏"
        if(msg.data === 'menage merch' && state.action === 'default') {
            return await merchMenageOptions(state);
        }

        //—É–¥–∞–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
        if(msg.data.indexOf('DeleteMerch') !== -1 && state.action === 'default'){
            const merchId = msg.data.split('=')[1];
            return await deleteMerch(state, merchId);
        }

        //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
        if(msg.data.indexOf('EditMerch') !== -1 && state.action === 'default') {

            const merchId = msg.data.split('=')[1];

            //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –º–µ—Ä—á–∞
            const existMerch = await db.find('merch', [[{field: 'id', exacly: merchId}]], true);

            if(!existMerch){
                return await bot.sendMessage(state.chatId, '*–ú–µ—Ä—á –Ω–µ –Ω–∞–π–¥–µ–Ω* ‚úä', {parse_mode: 'Markdown'});
            }

            state.data.replaceMerchId = merchId;
            msg.data = 'add merch';
            return callback_handler(msg);
        }

        //–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
        if(msg.data === 'add merch' && state.action === 'default') {
            //—Å—Ü–µ–Ω–∞—Ä–∏–π –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
            state.action = 'add merch';

            //–∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã            
            const buttons = CreateButtons([{
                text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
                data: 'main menu'
            }])

            state.recordStep('title', '‚Ñπ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä—á–∞', buttons);
            return state.executeLastStep();
        }

        //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
        if(msg.data === 'confirm new merch' && state.action === 'add merch') {
            return await confirmNewMerch(state);
        }

        //—Ä–∞—Å—Å—ã–ª–∫–∞ –Ω–æ–≤–æ–≥–æ –º–µ—Ä—á–∞
        if(msg.data === 'notify' && state.action === 'add merch') {
            return await notifyMerch(state);
        }

        // ---------------------------- –£—á–∞—Å—Ç–Ω–∏–∫–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç–∞—Ä—Ç–æ—Ä -----------------------------

        if(msg.data === 'participants' && state.action === 'default') {
            return await participantsMenageOptions(state);
        }

        //–ø–æ–∫–∞–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
        if(msg.data.indexOf('participants') !== -1 && state.action === 'default') {
            const eventId = msg.data.split('=')[1];
            return await participantsList(state, eventId);
        }

        // ---------------------------- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç–∞—Ä—Ç–æ—Ä -----------------------------

        //–≤–∫–ª–∞–¥–∫–∞ "—Ä–∞—Å—Å—ã–ª–∫–∏"
        if(msg.data === 'menage notify' && state.action === 'default') {
            return await mailingsMenageOptions(state);
        }
        
        //—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏
        if(msg.data === 'add mail' && state.action === 'default') {
            state.action = 'add mail';
            
            const sendingMess = `üì® *–í–≤–µ–¥–∏—Ç–µ —Ç–∏–ø —Ä–∞—Å—Å—ã–ª–∫–∏*/n/n
                *–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è* ‚Äî –ø–æ—Å—Ç–æ—è–Ω–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—Ä–æ–º–∏–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏/n/n
                *–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è* ‚Äî —Ä–∞–∑–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è/n/n
                *–ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è* ‚Äî —Ä–∞–∑–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å—Ä–∞–∑—É
            `.format();

            //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
            state.recordStep('send type', sendingMess, CreateButtons([{
                text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
                data: 'main menu'
            }]));

            return state.executeLastStep();
        }

        //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏
        if(msg.data === 'confirm new mail' && state.action === 'add mail') {
            return await confirmNewMail(state);
        }

        //—É–¥–∞–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
        if(msg.data.indexOf('DeleteMail') !== -1 && state.action === 'default'){
            const merchId = msg.data.split('=')[1];
            return await deleteMail(state, merchId);
        }

        //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
        if(msg.data.indexOf('EditMail') !== -1 && state.action === 'default') {
            const mailingId = msg.data.split('=')[1];

            //–ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏
            const existMailing = await db.find('mailings', [[{
                field: 'id',
                exacly: mailingId
            }]], true);

            if(!existMailing) return bot.sendMessage(chatId, '*–†–∞—Å—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–∏ÃÜ–¥–µ–Ω–∞* ‚úä', {parse_mode: 'Markdown'});

            msg.data = 'add mail';
            state.data.replaceMailingId = mailingId;
            return callback_handler(msg);
        }

        // ---------------------------- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç–∞—Ä—Ç–æ—Ä -----------------------------
        
        //—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        if(msg.data === 'menage gifts' && state.action === 'default') {
            return await giftMenageOptions(state);
        }

        //—Å–æ–∑–¥–∞–Ω–∏–µ
        if(msg.data === 'add discount' && state.action === 'default') {
            state.action = 'add discount';

            state.recordStep('title', '‚Ñπ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∫–∏–¥–∫–∏', CreateButtons([{
                text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
                data: 'main menu'
            }]))

            return state.executeLastStep();
        }

        //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏
        if(msg.data === 'confirm new discount' && state.action === 'add discount') {
            return await confirmNewDiscount(state);
        }

        //—É–¥–∞–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–æ–≥–æ —Å–∫–∏–¥–∫–∏
        if(msg.data.indexOf('DeleteDiscount') !== -1 && state.action === 'default'){
            const discountId = msg.data.split('=')[1];
            return await deleteDiscount(state, discountId);
        }

        //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏
        if(msg.data.indexOf('EditDiscount') !== -1 && state.action === 'default') {
            const discountId = msg.data.split('=')[1];

            //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å–∫–∏–¥–∫–∏
            const discount = await db.find('discounts', [[{
                field: 'id',
                exacly: discountId
            }]], true);

            if(!discount){
                return await bot.sendMessage(state.chatId, '*–°–∫–∏–¥–∫–∞ –Ω–µ –Ω–∞–∏ÃÜ–¥–µ–Ω–∞ ‚úä*', {parse_mode: 'Markdown'});
            }

            state.data.replaceDiscountId = discountId;

            msg.data = 'add discount';
            return callback_handler(msg);
        }

        // ---------------------------- –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä -----------------------------

        //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        if(msg.data.indexOf('AcceptOffer') !== -1) {
            const offerValue = msg.data.split('=')[1];
            const [offerType, offerId] = offerValue.split(':');
            return await confirmOffer(state, offerType, offerId);
        }

        //–£–¥–∞–ª–µ–Ω–∏–µ
        if(msg.data.indexOf('DeleteOffer') !== -1) {
            const offerValue = msg.data.split('=')[1];
            const [offerType, offerId] = offerValue.split(':');
            return await deleteOffer(state, offerType, offerId);
        }

        // ---------------------------- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç–∞—Ä—Ç–æ—Ä -----------------------------

        //–≤–∫–ª–∞–¥–∫–∞ "—Å—Ç—Ä–∞–Ω–∏—Ü—ã"
        if(msg.data === 'menage pages' && state.action === 'default') {
            return await pagesMenageOptions(state);
        }

        //–∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
        if(msg.data === 'edit start_message' && state.action === 'default') {
            state.action = 'edit start_message';

            state.recordStep('content', '‚Ñπ –í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', CreateButtons([{
                text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
                data: 'main menu'
            }]))

            return state.executeLastStep();
        }

        //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
        if(msg.data === 'confirm start_message' && state.action === 'edit start_message') {
            return await confirmStartMessage(state);
        }

        //–∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–û –Ω–∞—Å"
        if(msg.data === 'edit about_us' && state.action === 'default') {
            state.action = 'edit about_us';

            state.recordStep('content', '‚Ñπ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ "–û –Ω–∞—Å"', CreateButtons([{
                text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
                data: 'main menu'
            }]))

            return state.executeLastStep();
        }

        //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–û –Ω–∞—Å"
        if(msg.data === 'confirm about_us' && state.action === 'edit about_us') {
            return await confirmAboutUs(state);
        }

        //–∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–û–ø–ª–∞—Ç–∞"
        if(msg.data === 'edit payment_page' && state.action === 'default') {
            state.action = 'edit payment_page';

            state.recordStep('content', '‚Ñπ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–û–ø–ª–∞—Ç–∞"', CreateButtons([{
                text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
                data: 'main menu'
            }]))

            return state.executeLastStep();
        }

        //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–û–ø–ª–∞—Ç–∞"
        if(msg.data === 'confirm payment_page' && state.action === 'edit payment_page') {
            return await confirmPaymentPage(state);
        }

        //–∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏ –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
        if(msg.data === 'edit inv_discount' && state.action === 'default') {
            state.action = 'set inv_discount';
            state.options = CreateButtons([{text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é üîô', data: 'main menu'}]);

            return await bot.sendMessage(chatId, `‚Ñπ *–í–≤–µ–¥–∏—Ç–µ —Å–∫–∏–¥–∫—É –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ*/n/n
            "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ=${config.invite_discount} –ü—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–º—É=${config.for_invited_discount}"
            `.format(), state.options);
        }    

        // ---------------------------- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ----------------------------

        //–æ–±—Ä–∞–±–æ—Ç–∫–∞ –º–æ–∏—Ö –º–µ—Ä—á–µ–π
        if(msg.data === 'my merch' && state.action === 'default') {
            return await myMerchOffer(state);
        }

        //–≤–∫–ª–∞–¥–∫–∞ "–ë–ª–∏–∂–∞–π—â–∏–µ —Å–æ–±—ã—Ç–∏—è"
        if(msg.data === 'events' && state.action === 'default') {
            return await eventsList(state);
        }

        //—É—á–∞—Å—Ç–∏–µ –≤ —Å–æ–±—ã—Ç–∏–∏
        if(msg.data.indexOf('JoinEvent') !== -1 && state.action === 'default'){
            const eventId = msg.data.split('=')[1];
            return await selectEventToJoin(state, eventId);
        }

        //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É—á–∞—Å—Ç–∏—è –≤ —Å–æ–±—ã—Ç–∏–∏
        if(msg.data === 'confirm join_event' && state.action === 'join event') {
            state.data.username = msg.from.username;
            return await confirmJoinEvent(state);
        }

        // ------------------------------------ —É—á–∞—Å—Ç–∏–∫–∞–º ------------------------------------------

        //–≤–∫–ª–∞–¥–∫–∞ "–£—á–∞—Å—Ç–Ω–∏–∫–∞–º"
        if(msg.data === 'member' && state.action === 'default') {
            return await myEventsHandler(state);
        }

        //–≤–∫–ª–∞–¥–∫–∞ "–ú–æ–∏ –º–µ—Ä—á–∏"
        if(msg.data === 'merch' && state.action === 'default') {
            return await userMerchHandler(state);
        }

        //–∑–∞–∫–∞–∑ –º–µ—Ä—á–∞
        if(msg.data.indexOf('OfferMerch') !== -1 && state.action === 'default') {
            state.action = 'offer merch';
            return await offerMerch(state, msg.data.split('=')[1]);
        }

        //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –º–µ—Ä—á–∞
        if(msg.data === 'confirm' && state.action === 'offer merch') {
            state.data.username = msg.from.username;
            return await confirmOfferMerch(state);
        }

        //–≤–∫–ª–∞–¥–∫–∞ "–ú–æ–∏ –±–æ–Ω—É—Å—ã"
        if(msg.data === 'gifts') {
            return await menageUserGifts(state);
        }

        //–≤–∫–ª–∞–¥–∫–∞ "–æ –Ω–∞—Å"
        if(msg.data === 'about') {
            return bot.sendMessage(chatId, config.about_us.format(), state.options);
        }

        //–≤–∫–ª–∞–¥–∫–∞ "–ì–ª–∞–≤–Ω–∞—è"
        if(msg.data === 'main menu'){
            state.default();
            return bot.sendMessage(chatId, '–í—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ üëá', state.options);
        }
        
    }
    catch(err){
        bot.sendMessage(chatId, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ ‚úä');
        WriteInLogFile(err);
    }
}

//–ø–æ–ª—É—á–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (zip)
app.get('/database', (req, res) => {
    res.sendFile(__dirname + '/database.db');
});

//–∞—Ç–≤–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function authUser(sender, messageText = '', invited_by_key){

    //–ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
    let userData = await db.find('users', [[{
        field: 'telegram_id',
        exacly: sender.id
    }]], true);

    //—Ñ–ª–∞–≥ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let isNewUser = false;

    //—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if(!userData){

        const userId = await userRegistration(sender.id, sender.username, sender.first_name, invited_by_key);

        //–¥–∞–Ω–Ω—ã–µ –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        userData = await db.find('users', [[{
            field: 'telegram_id',
            exacly: userId
        }]], true);

        isNewUser = true;  
    }

    //–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
    initState(userData);
    return isNewUser;
}

//–∏–Ω–∏—Ü–∏–∞–¥–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
function initState(userData){
    //–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å–≤–∏—è
    if(!states.find(item => item.chatId === userData.telegram_id)){
        //–æ–ø—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –º–µ–Ω—é
        const options = userData.telegram_id === ADMIN_TELEGRAM_ID ? adminOptions() : userMainOptions()
        const state = CreateState(userData, bot);
        state.options = options;

        //—Å–æ—Å—Ç–æ—è–Ω–∏–µ
        states.push(state);
    }
}

//–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã
async function handleCommand(commandData){

    const allowedCommands = ['ConfirmMerch', 'ConfirmJoinEvent'];

    if(!allowedCommands.includes(Object.keys(commandData)[0])){
        return bot.sendMessage(ADMIN_TELEGRAM_ID, `‚Ñπ –ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è –∫–æ–º–∞–Ω–¥–∞`);
    }

    if(!Object.values(commandData)[0]){
        return bot.sendMessage(ADMIN_TELEGRAM_ID, `‚Ñπ –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è`);
    }

    if(Object.keys(commandData)[0] === 'ConfirmMerch'){
        const thisReciveKey = commandData.ConfirmMerch;
        const checkOffer = await db.find('merch_offers', [[{
            field: 'recive_key',
            exacly: thisReciveKey
        }]], true);

        if(!checkOffer){
            return bot.sendMessage(ADMIN_TELEGRAM_ID, `‚Ñπ –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        }

        const thisUser = await db.find('users', [[{ field: 'telegram_id', exacly: checkOffer.telegram_id}]], true);

        await db.delete('merch_offers', [[{field: 'recive_key', exacly: thisReciveKey}]]);

        await bot.sendMessage(ADMIN_TELEGRAM_ID, `
            *–ü–æ–¥–ø–∏—Å—å –ø–æ–¥–ª–µ–Ω–Ω–∞—è* ‚úîÔ∏è/n/n
            *–ú–µ—Ä—á:* "${checkOffer.title}"/n
            *–û—Ç:* @${escapeMarkdown(thisUser.username)} ${thisUser.nickname}/n
            *–û–ø–ª–∞—Ç–∏–ª:* ${checkOffer.toPay} ‚ÇΩ/n/n
            *–ó–∞–∫–∞–∑–∞–Ω:* ${new Time(checkOffer.created_at).toFormattedString(false)}/n
            *–ó–∞–∫–∞–∑ –∑–∞–∫—Ä—ã—Ç* ‚úä
        `.format(), {parse_mode: 'Markdown'});

        return await bot.sendMessage(thisUser.telegram_id, `*–í–∞—à –∑–∞–∫–∞–∑ –Ω–∞ –º–µ—Ä—á "${checkOffer.title}" –∑–∞–∫—Ä—ã—Ç* ‚úîÔ∏è`, {parse_mode: 'Markdown'});
    }

    if(Object.keys(commandData)[0] === 'ConfirmJoinEvent'){
        const thisReciveKey = commandData.ConfirmJoinEvent;
        const checkOffer = await db.find('event_offers', [[{
            field: 'recive_key',
            exacly: thisReciveKey
        }]], true);

        if(!checkOffer){
            return bot.sendMessage(ADMIN_TELEGRAM_ID, `‚Ñπ –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        }

        const thisUser = await db.find('users', [[{ field: 'telegram_id', exacly: checkOffer.telegram_id}]], true);

        await db.delete('event_offers', [[{field: 'recive_key', exacly: thisReciveKey}]]);

        await bot.sendMessage(ADMIN_TELEGRAM_ID, `
            *–ü–æ–¥–ø–∏—Å—å –ø–æ–¥–ª–µ–Ω–Ω–∞—è* ‚úîÔ∏è/n/n
            *–°–æ–±—ã—Ç–∏–µ:* "${checkOffer.title}"/n
            *–§–ò–û —É—á–∞—Å—Ç–Ω–∏–∫–∞:* "${checkOffer.full_name}"/n
            *–û—Ç:* @${escapeMarkdown(thisUser.username)} ${thisUser.nickname}/n
            *–û–ø–ª–∞—Ç–∏–ª:* ${checkOffer.toPay} ‚ÇΩ/n/n
            *–ó–∞–∫–∞–∑–∞–Ω:* ${new Time(checkOffer.created_at).toFormattedString(false)}/n
            *–ó–∞–∫–∞–∑ –∑–∞–∫—Ä—ã—Ç* ‚úä
        `.format(), {parse_mode: 'Markdown'});

        return await bot.sendMessage(thisUser.telegram_id, `*–í–∞—à –∑–∞–∫–∞–∑ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ "${checkOffer.title}" –∑–∞–∫—Ä—ã—Ç* ‚úîÔ∏è`, {parse_mode: 'Markdown'});
    }
}

//—Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã
function decodeCommand(message){

    //–∫–æ–º–∞–Ω–¥–∞
    let base64command = message.split(/start\s+/g)[1], command = {};

    //–ø—Ä–æ–≤–µ—Ä–∫ –∫–æ–º–∞–Ω–¥—ã
    if(base64command){
        try{
            let commandParts = atob(base64command).split('=');
            command[commandParts[0]] = commandParts[1];
        }
        catch(err){
            WriteInLogFile(`–ö–æ–º–∞–Ω–¥–∞ ${base64command} –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–∞`);
        }
    }

    return command;
}

//—Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –æ–ø—Ü–∏–π
function adminOptions(){
    //–∫–Ω–æ–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –º–µ–Ω—é
    return CreateButtons([{
        text: '–°–æ–±—ã—Ç–∏—è üî•',
        data: 'menage events'
    },
    {
        text: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üìà',
        data: 'stats'
    },
    {
        text: '–ó–∞–∫–∞–∑—ã ‚Ñπ',
        data: 'menage offers'
    },
    {
        text: '–ú–µ—Ä—á–∏ üëë',
        data: 'menage merch'
    },
    {
        text: '–£—á–∞—Å—Ç–Ω–∏–∫–∏ üèÜ',
        data: 'participants'
    },
    {
        text: '–†–∞—Å—Å—ã–ª–∫–∏ üì®',
        data: 'menage notify'
    },
    {
        text: '–°—Ç—Ä–∞–Ω–∏—Ü—ã üìÉ',
        data: 'menage pages'
    }, 
    {
        text: '–°–∫–∏–¥–∫–∏ üíØ',
        data: 'menage gifts'
    }
]);
}

//—Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –æ–ø—Ü–∏–π
function userMainOptions(){
    //–∫–Ω–æ–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –º–µ–Ω—é
    return CreateButtons([{
        text: '–ë–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è üî•',
        data: 'events'
    },
    {
        text: '–ó–∞–∫–∞–∑–∞—Ç—å –º–µ—Ä—á üêæ',
        data: 'merch'
    },
    {
        text: '–£—á–∞—Å—Ç–Ω–∏–∫–∞–º üèÜ',
        data: 'member'
    },
    {
        text: '–ú–æ–∏ –º–µ—Ä—á–∏ ‚úä',
        data: 'my merch'
    },
    {
        text: '–ú–æ–∏ –±–æ–Ω—É—Å—ã üíØ',
        data: 'gifts'
    },
    {
        text: '–û –Ω–∞—Å ü§ù',
        data: 'about'
    }]);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
async function initConnection(){ 
    try{
        await db.connect('database.db', 'init.sql');
    }
    catch(err){
        WriteInLogFile(err);
        throw err;
    }
}

//—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function userRegistration(telegram_id, username, nickname, invited_by_key){

    //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ
    if(!username){
        return await bot.sendMessage(chatId, `–ü–æ—Ö–æ–∂–µ, —á—Ç–æ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã –Ω–µ —É–∫–∞–∑—ã–≤–∞–ª–∏ –∏–º—è –¥–ª—è —Å–≤—è–∑–∏ —Å –≤–∞–º–∏ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ üëá/n/n
        –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏" - "–º–æ–π –∞–∫–∫–∞—É–Ω—Ç" - "–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª–µ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ`.format(), CreateButtons([{
            text: '–≥–æ—Ç–æ–≤–æ üëå',
            data: 'default'
        }]));
    }
    
    let invited_by, discount = 0, existInvitedBy;

    if(invited_by_key){    
        existInvitedBy = await db.find('users', [[{field: 'invite_code', exacly: invited_by_key}]], true);
        if(existInvitedBy) {
            invited_by = existInvitedBy.telegram_id;
            discount = config.for_invited_discount;
        }
    }

    //–±—É–¥—É—â–∏–π –∏–Ω–≤–∞–π—Ç –∫–æ–¥
    let invite_code = RandCode(6);

    //–ø–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º –∫–æ–¥–æ–º
    while(await db.find('users', [[{field: 'invite_code', exacly: invite_code}]], true)) {
        invite_code = RandCode(6);
    }

    //–¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    const newUserData = {
        telegram_id,
        invite_code,
        invited_by,
        username,
        discount,
        nickname
    }

    //—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    return await db.insert('users', newUserData);
}

//–ø—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–±—ã—Ç–∏–π
async function eventsMenageOptions(state){
    const allEvents = await db.find('events');

    const timeNow = new Time().shortUnix();

    //–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Å–æ–±—ã—Ç–∏–π
    if(!allEvents.length){
        await bot.sendMessage(state.chatId, '*–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å–æ–±—ã—Ç–∏–π –Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ* ‚úä', {parse_mode: 'Markdown'});
    }

    //–æ—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π
    for(let event of allEvents){

        //–∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è–º–∏
        const eventsControlButtons = CreateButtons([{
            text: '–ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å üîÅ',
            data: 'EditEvent=' + event.id
        }, {
            text: '–£–¥–∞–ª–∏—Ç—å ‚úñÔ∏è',
            data: 'DeleteEvent=' + event.id
        }])

        await bot.sendMessage(state.chatId, `
            *‚Ññ${event.id} ‚Äî ${event.title}*/n/n
            üìÖ *–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:* ${new Time(event.event_date).toFriendlyString()}/n
            üîª *–ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:* ${event.place}/n
            ü•ä *–í–µ—Å–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è:* –æ—Ç ${event.weight_from} –¥–æ ${event.weight_to} –∫–≥/n
            ${event.event_date < timeNow ? '*‚ÑπÔ∏è –°–æ–±—ã—Ç–∏–µ –ø—Ä–æ—à–ª–æ*/n' : ''}/n
            ${event.content}
        `.format(), eventsControlButtons);
    }

    //–∫–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
    state.options = CreateButtons([{
        text: '–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ ‚ûï',
        data: 'add event'
    },{
        text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é üîô',
        data: 'main menu'
    }]);

    //–¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑
    return bot.sendMessage(state.chatId, '*–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ üëá*', state.options);
}

//—É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
async function deleteEvent(state, eventId){

    //–ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
    const existEvent = await db.find('events', [[{field: 'id', exacly: eventId}]], true);

    if(!existEvent){
        return await bot.sendMessage(state.chatId, '*–°–æ–±—ã—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ* ‚úä', {parse_mode: 'Markdown'});
    }

    //—É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    await db.delete('events', [[{
        field: 'id',
        exacly: eventId
    }]]);

    bot.sendMessage(state.chatId, `*–°–æ–±—ã—Ç–∏–µ ‚Ññ${eventId} —É–¥–∞–ª–µ–Ω–æ ‚úîÔ∏è*`, state.options);
}

//—É–¥–∞–ª–µ–Ω–∏–µ –º–µ—Ä—á–∞
async function deleteMerch(state, merchId){

    //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â—É—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –º–µ—Ä—á–∞
    const existMerch = await db.find('merch', [[{field: 'id', exacly: merchId}]], true);

    if(!existMerch){
        return await bot.sendMessage(state.chatId, '*–ú–µ—Ä—á –Ω–µ –Ω–∞–π–¥–µ–Ω* ‚úä', {parse_mode: 'Markdown'});
    }

    //—É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    await db.delete('merch', [[{
        field: 'id',
        exacly: merchId
    }]]);

    bot.sendMessage(state.chatId, `*–ú–µ—Ä—á ‚Ññ${merchId} —É–¥–∞–ª–µ–Ω ‚úîÔ∏è*`, state.options);
}

//–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
function handleEventMenagment(state, message){

    if(message && ValidateMarkdown(message)){
        const warnMessage = `üîÅ *${ValidateMarkdown(message)}*`;
        return bot.sendMessage(state.chatId, warnMessage, state.options);
    }

    //—É–∫–∞–∑–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
    if(state.stepName === 'title'){

        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞
        if(!message) {
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è', state.options);
        }

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
        state.data.newEventData = {
            title: message
        }
        
        //—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        state._actionHandleFunction = handleEventMenagment;

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
        state.recordStep('place', 'üîª –í–≤–µ–¥–∏—Ç–µ –º–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è', CreateButtons([{
            text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
            data: 'main menu'
        },{
            text: '–ù–∞ —à–∞–≥ –Ω–∞–∑–∞–¥ üîô',
            data: 'step back'
        }]))

        return state.executeLastStep();
    }

    //—É–∫–∞–∑–∞–Ω–∏–µ –º–µ—Å—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è
    if(state.stepName === 'place'){

        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞
        if(!message) {
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –º–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è', state.options);
        }

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–µ—Å—Ç–∞
        state.data.newEventData.place = message;

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
        state.recordStep('weight', 'ü•ä –í–≤–µ–¥–∏—Ç–µ –≤–µ—Å–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–æ—Ç n –∏ –¥–æ m" (–∫–≥)', state.options);
        return  state.executeLastStep();
    }

    //—É–∫–∞–∑–∞–Ω–∏–µ –≤–µ—Å–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    if(state.stepName === 'weight'){

        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–≤–æ–¥ –æ—Ç –∏ –¥–æ
        if(!message || !message.match(/^–û—Ç\s\d+\s–¥–æ\s\d+$/gi)){
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–µ—Å–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ—Ç n –∏ –¥–æ m', state.options);
        }

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ—Å–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        state.data.newEventData.weight_from = message.match(/\s\d+\s/)[0].trim();

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ—Å–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        state.data.newEventData.weight_to = message.match(/\s\d+$/)[0].trim();

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
        state.recordStep('date', 'üìÖ –í–≤–µ–¥–∏—Ç–µ –ø–ª–∞–Ω–∏—Ä—É–µ–º—É—é –¥–∞—Ç—É —Å–æ–±—ã—Ç–∏—è\n\n–í —Ñ–æ—Ä–º–∞—Ç–µ: *"—á—á.–º–º.–≥–≥–≥–≥ —á—á:–º–º"*', state.options);
        return state.executeLastStep();
    }

    //—É–∫–∞–∑–∞–Ω–∏–µ –¥–∞—Ç—ã –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è
    if(state.stepName === 'date'){

        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã
        if(!message || !Time.isValid(message) || new Time().shortUnix() > new Time(message).shortUnix()) {
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Å–æ–±—ã—Ç–∏—è\n\n–í —Ñ–æ—Ä–º–∞—Ç–µ: *"—á—á.–º–º.–≥–≥–≥–≥ —á—á:–º–º"*', state.options);
        }

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞—Ç—ã –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è
        state.data.newEventData.event_date = new Time(message).shortUnix();

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
        state.recordStep('price', 'üí∏ –í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ —Ä—É–±–ª—è—Ö ‚ÇΩ', state.options);
        return state.executeLastStep();
    }

    //—É–∫–∞–∑–∞–Ω–∏–µ –¥–∞—Ç—ã –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è
    if(state.stepName === 'price'){

        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã
        if(!message || isNaN(message) || Number(message) <= 0 ) {
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ —Ä—É–±–ª—è—Ö ‚ÇΩ', state.options);
        }

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞—Ç—ã –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è
        state.data.newEventData.price = message;

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
        state.recordStep('content', 'ü§≥ –í–≤–µ–¥–∏—Ç–µ –ø–æ—Å—Ç –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏', state.options);
        return state.executeLastStep();
    }

    //—É–∫–∞–∑–∞–Ω–∏–µ –ø–æ—Å—Ç–∞ —Å–æ–±—ã—Ç–∏—è
    if(state.stepName === 'content'){

        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞
        if(!message) {
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–æ—Å—Ç –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏', state.options);
        }

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞—Ç—ã –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è
        state.data.newEventData.content = message;

        //—Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        const buttons = CreateButtons([{
            text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
            data: 'main menu'
        },{
            text: '–ù–∞ —à–∞–≥ –Ω–∞–∑–∞–¥ üîô',
            data: 'step back'
        },{
            text: '–ü–æ–¥–≤–µ—Ä–¥–∏—Ç—å ‚úîÔ∏è',
            data: 'confirm new event'
        }]);

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
        state.recordStep('confirm new event', `
            *${state.data.newEventData.title}*/n/n
            üìÖ *–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:* ${(new Time(state.data.newEventData.event_date)).toFriendlyString()}/n
            üîª *–ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:* ${state.data.newEventData.place}/n
            ü•ä *–í–µ—Å–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è:* ${state.data.newEventData.weight_from} –¥–æ ${state.data.newEventData.weight_to} –∫–≥/n
            ü´∞ *–¶–µ–Ω–∞ –∑–∞ —É—á–∞—Å—Ç–∏–µ:* ${state.data.newEventData.price} ‚ÇΩ/n/n
            ${state.data.newEventData.content}
        `.format(), buttons);

        //–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∞–≥–∞
        return state.executeLastStep();
    }
}

//–ø—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–±—ã—Ç–∏–π
async function merchMenageOptions(state){
    const allMerch = await db.find('merch');

    //–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Å–æ–±—ã—Ç–∏–π
    if(!allMerch.length){
        await bot.sendMessage(state.chatId, '*–ú–µ—Ä—á–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç* ‚úä', {parse_mode: 'Markdown'});
    }

    //–æ—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π
    for(let merch of allMerch){

        //–∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è–º–∏
        const merchControlButtons = CreateButtons([{
            text: '–ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å üîÅ',
            data: 'EditMerch=' + merch.id
        }, {
            text: '–£–¥–∞–ª–∏—Ç—å ‚úñÔ∏è',
            data: 'DeleteMerch=' + merch.id
        }])

        await bot.sendMessage(state.chatId, `
            *${merch.title}  ‚Äî  ‚Ññ${merch.id}*/n
            *–¶–µ–Ω–∞:* ${merch.price} ‚ÇΩ/n/n
            ${merch.content}
        `.format(), merchControlButtons);
    }

    //–∫–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
    state.options = CreateButtons([{
        text: '–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –º–µ—Ä—á ‚ûï',
        data: 'add merch'
    },{
        text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é üîô',
        data: 'main menu'
    }]);

    //–¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑
    return bot.sendMessage(state.chatId, '*–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –º–µ—Ä—á üëá*', state.options);
}

//–≤—ã–±–æ—Ä –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–ª—è —É—á–∞—Å—Ç–∏—è
async function selectEventToJoin(state, eventId){

    //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—á–∞—Å—Ç–∏–µ –∏–ª–∏ –ø–æ–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏
    const existOffer = await db.find('event_offers', [[{
        field: 'telegram_id',
        exacly: state.chatId
    }, {
        field: 'event_id',
        exacly: eventId
    }]], true);

    if(existOffer){
        state.default();
        return await bot.sendMessage(state.chatId, '*‚ÑπÔ∏è –í—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —ç—Ç–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏*', state.options);
    }

    state.action = 'join event';
    state.data.id = eventId;

    const buttons = CreateButtons([{
        text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
        data: 'main menu'
    }])

    state.recordStep('fullname', '‚Ñπ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é, –∏–º—è –∏ –æ—Ç—á–µ—Å—Ç–≤–æ (–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏)', buttons);
    return state.executeLastStep();
}

//–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –º–µ—Ä—á–∞
function handleMerchMenagment(state, message){

    if(message && ValidateMarkdown(message)){
        const warnMessage = `üîÅ *${ValidateMarkdown(message)}*`;
        return bot.sendMessage(state.chatId, warnMessage, state.options);
    }

    //—É–∫–∞–∑–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
    if(state.stepName === 'title'){

        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞
        if(!message) {
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –º–µ—Ä—á–∞', state.options);
        }

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
        state.data.newMerchData = {
            title: message
        }
        
        //—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        state._actionHandleFunction = handleMerchMenagment;

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
        state.recordStep('price', 'üí∏ –í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –∑–∞ –ø–æ–∫—É–ø–∫—É –≤ —Ä—É–±–ª—è—Ö ‚ÇΩ', CreateButtons([{
            text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
            data: 'main menu'
        },{
            text: '–ù–∞ —à–∞–≥ –Ω–∞–∑–∞–¥ üîô',
            data: 'step back'
        }]))

        return state.executeLastStep();
    }

    //—É–∫–∞–∑–∞–Ω–∏–µ –¥–∞—Ç—ã –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è
    if(state.stepName === 'price'){

        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã
        if(!message || isNaN(message) || Number(message) <= 0 ) {
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –∑–∞ –ø–æ–∫—É–ø–∫—É –≤ —Ä—É–±–ª—è—Ö ‚ÇΩ', state.options);
        }

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞—Ç—ã –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è
        state.data.newMerchData.price = message;

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
        state.recordStep('content', 'ü§≥ –í–≤–µ–¥–∏—Ç–µ –ø–æ—Å—Ç –æ –º–µ—Ä—á–µ', state.options);
        return state.executeLastStep();
    }

    //—É–∫–∞–∑–∞–Ω–∏–µ –ø–æ—Å—Ç–∞ —Å–æ–±—ã—Ç–∏—è
    if(state.stepName === 'content'){

        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞
        if(!message) {
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–æ—Å—Ç –æ –º–µ—Ä—á–µ', state.options);
        }

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞—Ç—ã –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è
        state.data.newMerchData.content = message;

        //—Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        const buttons = CreateButtons([{
            text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
            data: 'main menu'
        },{
            text: '–ù–∞ —à–∞–≥ –Ω–∞–∑–∞–¥ üîô',
            data: 'step back'
        },{
            text: '–ü–æ–¥–≤–µ—Ä–¥–∏—Ç—å ‚úîÔ∏è',
            data: 'confirm new merch'
        }]);

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
        state.recordStep('confirm new merch', `
            *${state.data.newMerchData.title}*/n
            *–¶–µ–Ω–∞:* ${state.data.newMerchData.price} ‚ÇΩ/n/n
            ${state.data.newMerchData.content}
        `.format(), buttons);

        //–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∞–≥–∞
        return state.executeLastStep();
    }
}

//—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–æ–π
async function handleMailMenagment(state, message) {
    
    if(message && ValidateMarkdown(message)){
        const warnMessage = `üîÅ *${ValidateMarkdown(message)}*`;
        return bot.sendMessage(state.chatId, warnMessage, state.options);
    }

    //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∏–ø–∞ —Ä–∞—Å—Å—ã–ª–∫–∏
    if(state.stepName === 'send type'){

        //–∑–Ω–∞—á–µ–Ω–∏—è
        const allowedValues = [
            '–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è',
            '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è',
            '–ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è'
        ];

        if(!allowedValues.includes(message)){
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–∏–ø —Ä–∞—Å—Å—ã–ª–∫–∏\n\n(–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è/–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è/–ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è)', state.options);
        }

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        state.data.newMailData = {
            send_type: message
        }

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±–∞—Ä–±–æ—Ç—á–∏–∫–∞
        state._actionHandleFunction = handleMailMenagment;

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
        state.recordStep('title', '‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏', CreateButtons([{
            text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
            data: 'main menu'
        },{
            text: '–ù–∞ —à–∞–≥ –Ω–∞–∑–∞–¥ üîô',
            data: 'step back'
        }]));

        return state.executeLastStep();
    }

    //–Ω–∞–∑–≤–∞–Ω–∏–µ
    if(state.stepName === 'title'){

        if(!message){
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏', state.options);
        }

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        state.data.newMailData.title = message;

        let varMessage;

        //–µ—Å–ª–∏ —Ä–∞—Å—Å—ã–ª–∫–∞ —Ä–∞–∑–æ–≤–∞—è, —Ç–æ –ø–µ—Ä–µ—Å–∫–æ—á–∏—Ç—å –∫ –≤—ã–±–æ—Ä—É –∞—É–¥–∏—Ç–æ—Ä–∏–∏
        if(state.data.newMailData.send_type === '–ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è'){
            //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
            state.recordStep('audience', '‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏\n\n–í—Å–µ–º/–£—á–∞—Å—Ç–Ω–∏–∫–∞–º/–í—Å–µ–º, –∫—Ä–æ–º–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)', state.options);
            return state.executeLastStep();
        }
        else if(state.data.newMailData.send_type === '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è'){
            varMessage = '‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏/n/n–í —Ñ–æ—Ä–º–∞—Ç–µ *—á—á.–º–º.–≥–≥ —á—á:–º–º*'.format();
        }
        else {
            varMessage = '‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏ –≤ –¥–Ω—è—Ö (–Ω–µ –±–æ–ª–µ–µ 14)'.format();
        }

        state.data._dateAdviceMsg = varMessage;

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
        state.recordStep('date time', varMessage, state.options);
        return state.executeLastStep();
    }

    //–¥–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è
    if(state.stepName === 'date time'){

        if(!message){
            return bot.sendMessage(state.chatId, state.data._dateAdviceMsg, state.options);
        }

        //–æ–±—Ä–∞–±–æ—Ç–∫–∞
        if(state.data.newMailData.send_type === '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è'){
            if(!Time.isValid(message)){
                return bot.sendMessage(state.chatId, `üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏/n/n
                –í —Ñ–æ—Ä–º–∞—Ç–µ *—á—á.–º–º.–≥–≥ —á—á:–º–º*    
                `.format(), state.options);
            }

            state.data.newMailData.response_time = new Time(message).shortUnix();
        }
        else {
            if(isNaN(message) || Number(message) <= 0 || Number(message) > 14){
                return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏ –≤ –¥–Ω—è—Ö (–Ω–µ –±–æ–ª–µ–µ 14)', state.options);
            }

            //—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω–∏—Ä—É–µ–º–æ–µ –≤—Ä–µ–º—è –≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ –Ω–∞ –ø–µ—Ä–µ–æ–¥–∏—á–µ—Å–∫–∏–µ
            state.data.newMailData.repeats = message * 86400;
        }

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
        state.recordStep('audience', '‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏\n\n(–í—Å–µ–º/–£—á–∞—Å—Ç–Ω–∏–∫–∞–º/–í—Å–µ–º, –∫—Ä–æ–º–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)', state.options);
        return state.executeLastStep();
    }

    //–∫–∞—Ç–µ–≥–æ—Ä–∏—è
    if(state.stepName === 'audience'){

        const allowedValues = [
            '–í—Å–µ–º',
            '–£—á–∞—Å—Ç–Ω–∏–∫–∞–º',
            '–í—Å–µ–º, –∫—Ä–æ–º–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤'
        ];

        if(!allowedValues.includes(message)){
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏\n\n(–í—Å–µ–º/–£—á–∞—Å—Ç–Ω–∏–∫–∞–º/–í—Å–µ–º, –∫—Ä–æ–º–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)', state.options);
        }

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        state.data.newMailData.audience = message;

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
        state.recordStep('content', '‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏', state.options);
        return state.executeLastStep();
    }

    //—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ
    if(state.stepName === 'content'){

        if(!message){
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏', state.options);
        }

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        state.data.newMailData.content = message;

        //—Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        const buttons = CreateButtons([{
            text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
            data: 'main menu'
        },{
            text: '–ù–∞ —à–∞–≥ –Ω–∞–∑–∞–¥ üîô',
            data: 'step back'
        },{
            text: '–ü–æ–¥–≤–µ—Ä–¥–∏—Ç—å ‚úîÔ∏è',
            data: 'confirm new mail'
        }]);

        //—Å—Ç—Ä–æ–∫–∞ –¥–∞—Ç—ã
        const sendingStroke = state.data.newMailData.send_type === '–ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è' ? '' :
        state.data.newMailData.repeats ? `üîÅ *–ü–æ–≤—Ç–æ—Ä—è—Ç—å –∫–∞–∂–¥—ã–µ:* ${TextDayFormat(state.data.newMailData.repeats/86400)}/n` :
        `üìÖ *–û—Ç–ø—Ä–∞–≤–∫–∞:* ${new Time(state.data.newMailData.response_time).toFriendlyString()}/n`

        //—Å–æ–æ–±—â–µ–Ω–∏–µ
        const sendingMess = `
            *${state.data.newMailData.title}*/n/n
            üì® *–¢–∏–ø —Ä–∞—Å—Å—ã–ª–∫–∏:* ${state.data.newMailData.send_type}/n
            ${sendingStroke}
            üë• *–ê—É–¥–∏—Ç–æ—Ä–∏—è:* ${state.data.newMailData.audience}/n/n
            ${state.data.newMailData.content}
        `.format();

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
        state.recordStep('confirm new mail', sendingMess, buttons);

        //–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∞–≥–∞
        return state.executeLastStep();
    }
}

//—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–∫–∏–¥–∫–∏
async function handleDiscountMenagment(state, message){

    if(message && ValidateMarkdown(message)){
        const warnMessage = `üîÅ *${ValidateMarkdown(message)}*`;
        return bot.sendMessage(state.chatId, warnMessage, state.options);
    }

    //–∫–∞—Ç–µ–≥–æ—Ä–∏—è
    if(state.stepName === 'title'){

        if(!message){
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∫–∏–¥–∫–∏', state.options);
        }

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        state.data.newDiscountData = {
            title: message
        }

        state._actionHandleFunction = handleDiscountMenagment;

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
        state.recordStep('discount', '‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö', CreateButtons([{
            text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
            data: 'main menu'
        },{
            text: '–ù–∞ —à–∞–≥ –Ω–∞–∑–∞–¥ üîô',
            data: 'step back'
        }]));
        return state.executeLastStep();
    }

    //–∑–Ω–∞—á–µ–Ω–∏–µ
    if(state.stepName === 'discount'){
        if(isNaN(message) || message < 1 || message > 100){
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö', state.options);
        }

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        state.data.newDiscountData.discount = message;

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
        state.recordStep('category', '‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å–∫–∏–¥–∫–∏ (–í—Å–µ/–£—á–∞—Å—Ç–∏–µ/–ú–µ—Ä—á–∏)'.format(), state.options);
        return state.executeLastStep();
    }

    //–∫–∞—Ç–µ–≥–æ—Ä–∏—è
    if(state.stepName === 'category'){

        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞
        const allowedValues = [
            '–í—Å–µ',
            '–£—á–∞—Å—Ç–∏–µ',
            '–ú–µ—Ä—á–∏'
        ];

        if(!allowedValues.includes(message)){
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö', state.options);
        }

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        state.data.newDiscountData.category = message;

        //—Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        const buttons = CreateButtons([{
            text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
            data: 'main menu'
        },{
            text: '–ù–∞ —à–∞–≥ –Ω–∞–∑–∞–¥ üîô',
            data: 'step back'
        },{
            text: '–ü–æ–¥–≤–µ—Ä–¥–∏—Ç—å ‚úîÔ∏è',
            data: 'confirm new discount'
        }]);

        //—Å–æ–æ–±—â–µ–Ω–∏–µ
        const sendingMess = `
            *${state.data.newDiscountData.title}*/n/n
            üíØ *–°–∫–∏–¥–∫–∞:* ${state.data.newDiscountData.discount}%/n
            ‚Ñπ *–ö–∞—Ç–µ–≥–æ—Ä–∏—è:* ${state.data.newDiscountData.category}/n/n
        `.format();

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
        state.recordStep('confirm new discount', sendingMess, buttons);

        //–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∞–≥–∞
        return state.executeLastStep();
    }
}

//–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏
async function confirmNewMail(state){
    
    //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω—É—é
    if(state.data.newMailData.send_type === '–ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è'){
        await sendMail(state.data.newMailData);
        state.default();
        return bot.sendMessage(state.chatId, '*–†–∞—Å—Å—ã–ª–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ ‚úîÔ∏è*', state.options);
    }

    let message = '*–†–∞—Å—Å—ã–ª–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ ‚úîÔ∏è*';

    //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏
    if(state.data.replaceMailingId){
        await db.update('mailings', state.data.newMailData, [[{
            field: 'id',
            exacly: state.data.replaceMailingId
        }]]);

        //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞ –∏–∑–º–µ–Ω–Ω–µ–Ω–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏
        updateMailingTimer(state.data.replaceMailingId);
        message = `*–†–∞—Å—Å—ã–ª–∫–∞ ‚Ññ${state.data.replaceMailingId} –æ–±–Ω–æ–≤–ª–µ–Ω–∞ ‚úîÔ∏è*`;
    }
    else {

        //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞ –∏–∑–º–µ–Ω–Ω–µ–Ω–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏
        const newMailingId = await db.insert('mailings', state.data.newMailData);
        updateMailingTimer(newMailingId);
    }
    
    state.default();
    bot.sendMessage(state.chatId, message, state.options);
}

//—Å–∫–∏–¥–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function menageUserGifts(state){

    //–ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–∫–∏–¥–æ–∫
    let discounts = await db.find('discounts');

    //–ø—Ä–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –ø–ª–∞—Ç–Ω—ã–π –∑–∞–∫–∞–∑
    const user = await db.find('users', [[{
        field: 'telegram_id',
        exacly: state.chatId
    }]], true)

    if(!discounts.length && !user.made_first_offer && !user.discount){
        return await bot.sendMessage(state.chatId, `*–°–¥–µ–ª–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –∏ 
        –ø–æ–ª—É—á–∞—Ç—å –±–æ–ª—å—à–µ –∫—Ä—É—Ç—ã—Ö –±–æ–Ω—É—Å–æ–≤ üéÅüéÅüéÅ*`.format(), state.options);
    }

    let message = '', referalPart = '';

    if(user.made_first_offer){
        const base64UrlCommand = btoa(`invited_by=${user.invite_code}`);
        const urlCommand = `https://t.me/${BOT_USERNAME}?start=${base64UrlCommand}`;

        referalPart = `
        *–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ üëá*/n\`\`\`${urlCommand}\`\`\`/n/n
        üíØ *–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Å–∫–∏–¥–∫–∞:* ${user.discount} %/n/n
        üéÅ *–ü–æ–ª—É—á–∞–π—Ç–µ —Å–∫–∏–¥–∫—É ${config.invite_discount} % –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä—ã–π –æ—Ñ–æ—Ä–º–∏—Ç –ª—é–±–æ–π –∑–∞–∫–∞–∑ –ø–æ –≤–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ. 
        –î—Ä—É–≥—É ‚Äî ${config.for_invited_discount} %*/n/n
        `;
    }

    for(let item of discounts){
        message += `üéÅ *${item.title}* –Ω–∞ ${item.category.toLowerCase()} ‚Äî —Å–∫–∏–¥–∫–∞ ${item.discount}%/n/n`;
    }

    if(!discounts.length && !user.made_first_offer){
        message += `üíØ *–°–¥–µ–ª–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –∏ 
        –ø–æ–ª—É—á–∞—Ç—å –±–æ–ª—å—à–µ –∫—Ä—É—Ç—ã—Ö –±–æ–Ω—É—Å–æ–≤!*/n/nüî• *–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Å–∫–∏–¥–∫–∞:* ${user.discount} % –Ω–∞ –≤—Å–µ`;
    }

    await bot.sendMessage(state.chatId, (referalPart + message).format(), state.options);
}

//—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–¥–∫–∏
async function sendMail(mail){

    let userToMail;

    //–æ–±—Ä–±–∞–æ—Ç–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
    switch(mail.audience){
        case '–í—Å–µ–º': {
            const users = await db.find('users');
            userToMail = users;
            break;
        }
        case '–£—á–∞—Å—Ç–Ω–∏–∫–∞–º': {
            const participants = await db.find('event_offers');
            userToMail = participants;
            break;
        }
        case '–í—Å–µ–º, –∫—Ä–æ–º–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤': {
            const participants = await db.find('event_offers');
            const users = await db.find('users');
            userToMail = users.filter(user => !participants.some(participant => participant.telegram_id === user.telegram_id));
            break;
        }
    }

    //—Ä–∞—Å—Å—ã–ª–∫–∞
    for(let user of userToMail){

        if(user.telegram_id === ADMIN_TELEGRAM_ID){
            continue
        }

        await bot.sendMessage(user.telegram_id, `
            *${mail.title}*/n/n
            ${mail.content}
        `.format(), {parse_mode: 'Markdown'});
    }
}

//—É—á–∞—Å—Ç–Ω–∏–∫–∞–º
async function myEventsHandler(state){
    const myEvents = await db.find('event_offers', [[{
        field: 'telegram_id',
        exacly: state.chatId
    }]]);

    if(!myEvents.length){
        bot.sendMessage(state.chatId, '*–í—ã –ø–æ–∫–∞ –Ω–∏–≥–¥–µ –Ω–µ —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ* ‚úä\n\n–ü–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –≤–æ –≤–∫–ª–∞–¥–∫–µ *"–ë–ª–∏–∂–∞–π—â–∏–µ —Å–æ–±—ã—Ç–∏—è"* üëá', state.options);
    }

    for(let item of myEvents){

        //—Å–æ–±—ã—Ç–∏–µ
        const event = await db.find('events', [[{
            field: 'id',
            exacly: item.event_id
        }]], true);

        if(item.accepted){
                
            const base64UrlCommand = btoa(`ConfirmJoinEvent=${item.recive_key}`);
            const checkofferUrl = `https://t.me/${BOT_USERNAME}?start=${base64UrlCommand}`

            //–≥–µ–Ω–µ—Ä–∞—Ü–∏—è QR –∫–æ–¥–∞ —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π qr-code
            const qrCodeBuffer = await QRCode.toBuffer(checkofferUrl, {type: 'png'});

            //—Å–æ–æ–±—â–µ–Ω–∏–µ
            const message = `
                *–ü—Ä–µ–¥—ä—è–≤–∏—Ç–µ –¥–∞–Ω–Ω—ã–π QR –∫–æ–¥ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏*/n/n
                *${item.title}*/n
                *–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:* ${new Time(event.event_date).toFriendlyString()}/n
                *–ú–µ—Å—Ç–æ:* ${event.place}/n
                *–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏:* –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω ‚úîÔ∏è
            `.format();

            //–æ—Ç–ø—Ä–∞–≤–∫–∞ QR –∫–æ–¥–∞
            await bot.sendPhoto(state.chatId, qrCodeBuffer, {
                caption: message,
                parse_mode: 'Markdown'
            });
        }
        else {
            //—Å–æ–æ–±—â–µ–Ω–∏–µ
            const message = `
                *${item.title}*/n
                *–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:* ${new Time(event.event_date).toFriendlyString()}/n
                *–ú–µ—Å—Ç–æ:* ${event.place}/n
                *–û–ø–ª–∞—á–µ–Ω–æ:* ${item.toPay} ‚ÇΩ/n
                *–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏:* –û–∂–∏–¥–∞–µ—Ç –ø–æ–¥–≤–µ—Ä–∂–¥–µ–Ω–∏—è/n/n
                ‚Ñπ *–ü–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ —É –≤–∞—Å –ø–æ—è–≤–∏—Ç—Å—è QR –∫–æ–¥ —É—á–∞—Å—Ç–∏–Ω–∏–∫–∞*
            `.format();

            await bot.sendMessage(state.chatId, message, {parse_mode: 'Markdown'});
        }
    }

    await bot.sendMessage(state.chatId, '*–ó–¥–µ—Å—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã –≤–∞—à–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è*', CreateButtons([{
        text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é üîô',
        data: 'main menu'
    }]));
}

//—Ä–∞—Å—Å—ã–ª–∫–∞ –Ω–æ–≤–æ–≥–æ –º–µ—Ä—á–∞
async function notifyMerch(state){

    //–ø–æ–ª—É—á–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –º–µ—Ä—á–∞
    const merch = await db.find('merch', [[{
        field: 'id',
        exacly: state.data.id
    }]], true)

    const mailData = {
        audience: '–í—Å–µ–º',
        title: `–£ –Ω–∞—Å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞ ‚Äî ${merch.title} üî•`,
        content: `${merch.content}/n/n*–ó–∞–∫–∞–∑–∞—Ç—å –º–æ–∂–Ω–æ –≤–æ –≤–∫–ª–∞–¥–∫–µ "–ú–æ–∏ –º–µ—Ä—á–∏"*`
    }

    await sendMail(mailData);
    state.default();
    await bot.sendMessage(state.chatId, '*–†–∞—Å—Å—ã–ª–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ ‚úîÔ∏è*', state.options);
}

//—Ä–∞—Å—Å—ã–ª–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
async function notifyEvent(state){

    //–ø–æ–ª—É—á–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –º–µ—Ä—á–∞
    const event = await db.find('events', [[{
        field: 'id',
        exacly: state.data.id
    }]], true)

    const mailData = {
        audience: '–í—Å–µ–º',
        title: `–£ –Ω–∞—Å –Ω–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ ‚Äî ${event.title} üî•`,
        content: `
        üìÖ *–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:* ${new Time(event.event_date).toFriendlyString()}/n
        üîª *–ú–µ—Å—Ç–æ:* ${event.place}/n
        ü•ä *–í–µ—Å–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è:* –æ—Ç ${event.weight_from} –¥–æ ${event.weight_to} –∫–≥/n/n
        ${event.content}/n/n*–ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –º–æ–∂–Ω–æ –≤–æ –≤–∫–ª–∞–¥–∫–µ "–ë–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è"*`
    }

    await sendMail(mailData);
    state.default();
    await bot.sendMessage(state.chatId, '*–†–∞—Å—Å—ã–ª–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ ‚úîÔ∏è*', state.options);
}

//–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
async function confirmNewMerch(state){

    //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
    if(state.data.replaceMerchId){
        await db.update('merch', state.data.newMerchData, [[{
            field: 'id',
            exacly: state.data.replaceMerchId
        }]]);

        state.default();
        bot.sendMessage(state.chatId, `*–ú–µ—Ä—á ‚Ññ${state.data.replaceMerchId} –æ–±–Ω–æ–≤–ª–µ–Ω ‚úîÔ∏è*`, state.options);
    }
    //–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
    else {
        //–∫–Ω–æ–ø–∫–∏  —Ä–∞—Å—Å—ã–ª–∫–∏
        state.data.id = await db.insert('merch', state.data.newMerchData);
        state.recordStep('notify', '*–ú–µ—Ä—á –¥–æ–±–∞–≤–ª–µ–Ω ‚úîÔ∏è*', CreateButtons([{
            text: '–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –º–µ—Ä—á–∞ üì®',
            data: 'notify'
        },{
            text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é üîô',
            data: 'main menu'
        }]));

        //–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∞–≥–∞
        state.executeLastStep();
    }
}

//–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏
async function confirmNewDiscount(state){

    let message = '';

    if(state.data.replaceDiscountId){
        await db.update('discounts', state.data.newDiscountData, [[{
            field: 'id',
            exacly: state.data.replaceDiscountId
        }]]);

        message = `*–°–∫–∏–¥–∫–∞ ‚Ññ${state.data.replaceDiscountId} –æ–±–Ω–æ–≤–ª–µ–Ω–∞ ‚úîÔ∏è*`;
    }
    else {
        await db.insert('discounts', state.data.newDiscountData);
        message = '*–°–∫–∏–¥–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ ‚úîÔ∏è*';
    }

    state.default();
    bot.sendMessage(state.chatId, message, state.options);
}

//—É–¥–∞–ª–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏
async function deleteDiscount(state, discountId){

    //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å–∫–∏–¥–∫–∏
    const discount = await db.find('discounts', [[{field: 'id',exacly: discountId}]], true);

    if(!discount){
        return await bot.sendMessage(state.chatId, '*–°–∫–∏–¥–∫–∞ –Ω–µ –Ω–∞–∏ÃÜ–¥–µ–Ω–∞ ‚úä*', {parse_mode: 'Markdown'});
    }

    await db.delete('discounts', [[{
        field: 'id',
        exacly: discountId
    }]]);

    state.default();
    bot.sendMessage(state.chatId, `*–°–∫–∏–¥–∫–∞ ‚Ññ${discountId} —É–¥–∞–ª–µ–Ω–∞ ‚úîÔ∏è*`, state.options);
}

//–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async function confirmStartMessage(state){
    //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    config.start_message = state.data.newStartMessage.content;

    //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ config.json
    await fs.writeFile('./config.json', JSON.stringify(config, null, 2));

    state.default();
    bot.sendMessage(state.chatId, `*–ü—Ä–∏–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ ‚úîÔ∏è*`, state.options);
}

//–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ "–û –Ω–∞—Å"
async function confirmAboutUs(state){
    //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    config.about_us = state.data.newAboutUs.content;

    //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ config.json
    await fs.writeFile('./config.json', JSON.stringify(config, null, 2));

    state.default();
    bot.sendMessage(state.chatId, `*–í–∫–ª–∞–¥–∫–∞ "–û –Ω–∞—Å" –æ–±–Ω–æ–≤–ª–µ–Ω–∞ ‚úîÔ∏è*`, state.options);
}

//–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ "–û–ø–ª–∞—Ç–∞"
async function confirmPaymentPage(state){
    //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    config.payment_page = state.data.newPaymentPage.content;

    //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ config.json
    await fs.writeFile('./config.json', JSON.stringify(config, null, 2));

    state.default();
    bot.sendMessage(state.chatId, `*–°—Ç—Ä–∞–Ω–∏—Ü–∞ "–û–ø–ª–∞—Ç–∞" –æ–±–Ω–æ–≤–ª–µ–Ω–∞ ‚úîÔ∏è*`, state.options);
}

//–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
async function confirmNewEvent(state){
    
    //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
    if(state.data.replaceEventId){
        await db.update('events', state.data.newEventData, [[{
            field: 'id',
            exacly: state.data.replaceEventId
        }]]);

        bot.sendMessage(state.chatId, `*–°–æ–±—ã—Ç–∏–µ ‚Ññ${state.data.replaceEventId} –æ–±–Ω–æ–≤–ª–µ–Ω–æ ‚úîÔ∏è*`, state.options);
        state.default();
    }
    //–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
    else {
        //–∫–Ω–æ–ø–∫–∏  —Ä–∞—Å—Å—ã–ª–∫–∏
        state.data.id = await db.insert('events', state.data.newEventData);
        state.recordStep('notify', '*–°–æ–±—ã—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ ‚úîÔ∏è*', CreateButtons([{
            text: '–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É —Å–æ–±—ã—Ç–∏—è üì®',
            data: 'notify'
        },{
            text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é üîô',
            data: 'main menu'
        }]));

        //–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∞–≥–∞
        state.executeLastStep();
    }
}

//—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏
async function offersMenageOptions(state){
    const merchOffers = (await db.executeWithReturning('SELECT * FROM merch_offers')).map(item => ({...item, type: 'merch'}));
    const eventOffers = (await db.executeWithReturning('SELECT * FROM event_offers')).map(item => ({...item, type: 'event'}));
    const totalOffers = [...merchOffers, ...eventOffers];
    //–≤—ã–≤–æ–¥ –∑–∞–∫–∞–∑–æ–≤, –æ—Ç—Å–∞—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –ø–æ–ª—é accepted 0
    const sortedOffers = totalOffers.sort((a, b) => a.accepted - b.accepted);

    //–µ—Å–ª–∏ –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç
    if(!sortedOffers.length){
        return bot.sendMessage(state.chatId, '*–ó–∞–∫–∞–∑–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ* ‚úä', {parse_mode: 'Markdown'});
    }

    //–≤—ã–≤–æ–¥ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤
    for(let offer of sortedOffers){

        const offerUser = await db.find('users', [[{
            field: 'telegram_id',
            exacly: offer.telegram_id
        }]], true);

        let buttons;
        const offerTypeCase = offer.type === 'merch' ? '–Ω–∞ –º–µ—Ä—á' : '–Ω–∞ —É—á–∞—Å—Ç–∏–µ –≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏';

        //—Å–æ–æ–±—â–µ–Ω–∏–µ
        const message = `*–ó–∞–∫–∞–∑ ${offerTypeCase} ‚Ññ${offer.id}: "${offer.title}"*/n/n
        *–°—Ç–∞—Ç—É—Å:* ${offer.accepted ? '–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω ‚úîÔ∏è' : '–û–∂–∏–¥–∞–µ—Ç –≤–∞—à–µ–≥–æ –ø–æ–¥–≤–µ—Ä–∂–¥–µ–Ω–∏—è ‚Ñπ'}/n
        *–ö –æ–ø–ª–∞—Ç–µ:* ${offer.toPay} ‚ÇΩ/n/n
        üë§ *–û—Ç:* @${escapeMarkdown(offerUser.username)}/n
        `.format();

        //–∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞–º–∏
        if(!offer.accepted){

            //–∫–Ω–æ–ø–∫–∏ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            buttons = CreateButtons([{
                text: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úîÔ∏è',
                data: `AcceptOffer=${offer.type}:${offer.id}`
            },{
                text: '–û—Ç–∫–∞–∑–∞—Ç—å ‚úñÔ∏è',
                data: `DeleteOffer=${offer.type}:${offer.id}`
            }], false);

        }

        //—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        await bot.sendMessage(state.chatId, message, buttons || CreateButtons([{
            text: '–£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑ ‚úñÔ∏è',
            data: `DeleteOffer=${offer.type}:${offer.id}`
        }]));
    }

    state.options = CreateButtons([{
        text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é üîô',
        data: 'main menu'
    }])

    await bot.sendMessage(state.chatId, `‚Ñπ *–£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑ –º–æ–∂–Ω–æ –ø–æ—Å–ª–µ –µ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.*/n
    –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —ç—Ç–æ –¥–µ–ª–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—á–∞—Å—Ç–∏—è –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ä—á–∞. 
    –í —Å–ª—É—á–∞–µ –æ—Ç–∫–∞–∑–∞ –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω./n/n
    –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –ø–æ–¥–ª–µ–Ω–Ω—Å—Ç—å —Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º –∏—Ö QR-–∫–æ–¥–∞. 
    –ü–æ—Å–ª–µ —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –≤–∞–º –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞—è–≤–∫–µ, –∏ –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã—Ç.`.format(), state.options);
}

//—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
async function handleStatistics(state){

    //–ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    const totalUsers = await db.executeWithReturning('SELECT COUNT(*) FROM users');
    const totalEvents = await db.executeWithReturning('SELECT COUNT(*) FROM events')
    const totalMerch = await db.executeWithReturning('SELECT COUNT(*) FROM merch')
    const totalParticipants = await db.executeWithReturning('SELECT COUNT(*) FROM event_offers')
    const totalNews = await db.executeWithReturning('SELECT COUNT(*) FROM mailings')
    const totalDiscounts = await db.executeWithReturning('SELECT COUNT(*) FROM discounts')

    //–ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ —É—á–∞—Å—Ç–∏–µ –∏ –º–µ—Ä—á–∏
    const cashFromMerch = await db.executeWithReturning('SELECT SUM(toPay) FROM merch_offers WHERE accepted = 1')
    const cashFromEvent = await db.executeWithReturning('SELECT SUM(toPay) FROM event_offers WHERE accepted = 1')
    const totalCash = cashFromMerch[0]['SUM(toPay)'] + cashFromEvent[0]['SUM(toPay)'];

    //–≤—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
    const message = `
        üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:  ${totalUsers[0]['COUNT(*)']}/n
        üìç –í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π: ${totalEvents[0]['COUNT(*)']}/n
        üëë –í—Å–µ–≥–æ –º–µ—Ä—á–µ–π: ${totalMerch[0]['COUNT(*)']}/n
        ü•ä –í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:  ${totalParticipants[0]['COUNT(*)']}/n
        üì® –í—Å–µ–≥–æ —Ä–∞—Å—Å—ã–ª–æ–∫:  ${totalNews[0]['COUNT(*)']}/n
        üíØ –í—Å–µ–≥–æ —Å–∫–∏–¥–æ–∫:  ${totalDiscounts[0]['COUNT(*)']}/n/n
        üí∏ *–ü—Ä–∏–±—ã–ª—å —Å –º–µ—Ä—á–µ–π:* ${cashFromMerch[0]['SUM(toPay)'] || 0} ‚ÇΩ/n
        üí∏ *–ü—Ä–∏–±—ã–ª—å —Å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:* ${cashFromEvent[0]['SUM(toPay)'] || 0} ‚ÇΩ/n
        ü´∞ *–ü—Ä–∏–±—ã–ª—å —Å—É–º–º–∞—Ä–Ω–æ:* ${totalCash || 0} ‚ÇΩ/n
    `.format();

    bot.sendMessage(state.chatId, message, state.options);
}

//–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É—á–∞—Å—Ç–∏—è
async function confirmJoinEvent(state){

    state.callTimeoutLimit(64800000, 'new offer', 3);

    if(!state.timeoutIsEnd('new offer')){
        state.default();
        return await bot.sendMessage(state.chatId, `‚ÑπÔ∏è *–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –Ω–∞ 3 –∑–∞–∫–∞–∑–∞ –≤ —Å—É—Ç–∫–∏*`.format(), state.options);
    }

    //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É—á–∞—Å—Ç–∏—è
    const eventOfferId = await db.insert('event_offers', {
        telegram_id: state.chatId,
        event_id: state.data.id,
        full_name: state.data.newParticipant.full_name,
        title: state.data.title,
        toPay: state.data.toPay
    });

    const user = await db.find('users', [[{field: 'telegram_id', exacly: state.chatId}]], true);

    //—Å–±—Ä–æ—Å —Å–∫–∏–¥–∫–∏
    if(user.discount){
        await db.update('users', {discount: 0}, [[{field: 'telegram_id', exacly: state.chatId}]]);
    }

    //–≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    await bot.sendMessage(ADMIN_TELEGRAM_ID, `‚Ñπ *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —É—á–∞—Å—Ç–∏–µ –≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏: "${state.data.title}*"/n/n
    *–û—Ç:* @${escapeMarkdown(state.data.username)}/n
    *–ö –æ–ø–ª–∞—Ç–µ:* ${state.data.toPay} ‚ÇΩ/n/n
    *–ó–∞—è–≤–∫–∞ —Ç–∞–∫–∂–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∞ –≤ "–ó–∞–∫–∞–∑–∞—Ö", –≥–¥–µ –µ–µ –º–æ–∂–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–∏—Ç—å*
    `.format(), CreateButtons([{
        text: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úîÔ∏è',
        data: `AcceptOffer=event:${eventOfferId}`
    },{
        text: '–û—Ç–∫–∞–∑–∞—Ç—å ‚úñÔ∏è',
        data: `DeleteOffer=event:${eventOfferId}`
    }], false));

    state.default();
    //—Ä–∞—Å—Å—ã–ª–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await bot.sendMessage(state.chatId, `*‚úîÔ∏è –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è*`, state.options);
}

//—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
async function pagesMenageOptions(state){

    //—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ –Ω–∞—Å
    await bot.sendMessage(state.chatId, `*–°—Ç—Ä–∞–Ω–∏—Ü–∞* "–û –Ω–∞—Å" ü§ù/n/n${config.about_us}`.format(), CreateButtons([{
        text: '–ò–∑–º–µ–Ω–∏—Ç—å ‚úçÔ∏è',
        data: 'edit about_us'
    }]));

    //—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await bot.sendMessage(state.chatId, `*–°—Ç—Ä–∞–Ω–∏—Ü–∞* "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ" üëã/n/n${config.start_message}`.format(), CreateButtons([{
        text: '–ò–∑–º–µ–Ω–∏—Ç—å ‚úçÔ∏è',
        data: 'edit start_message'
    }]));

    //—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await bot.sendMessage(state.chatId, `*–°—Ç—Ä–∞–Ω–∏—Ü–∞* "–û–ø–ª–∞—Ç–∞" ü´∞/n/n${config.payment_page}`.format(), CreateButtons([{
        text: '–ò–∑–º–µ–Ω–∏—Ç—å ‚úçÔ∏è',
        data: 'edit payment_page'
    }]));

    //–æ–ø—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞
    state.options = CreateButtons([{
        text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é üîô',
        data: 'main menu'
    }])

    //—Å–æ–æ–±—â–µ–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—Ç–∞
    await bot.sendMessage(state.chatId, `
        ‚Ñπ –°—Ç—Ä–∞–Ω–∏—Ü–∞ *"–û –Ω–∞—Å"* —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ, —á–∞—Å—Ç–æ –¥–æ–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–ª–µ–∑–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏ (–æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å, —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ –∏ —Ç.–¥)./n/n
        ‚Ñπ –°—Ç—Ä–∞–Ω–∏—Ü–∞ *"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"* –ø–æ—è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞ —É –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –∂–µ–ª–∞–Ω–∏–µ —É –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑./n/n
        ‚Ñπ –°—Ç—Ä–∞–Ω–∏—Ü–∞ *"–û–ø–ª–∞—Ç–∞"* —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ø–æ—Å–æ–±–∞—Ö –æ–ø–ª–∞—Ç—ã –∏ —Å–ø–æ—Å–æ–±–∞—Ö –¥–æ—Å—Ç–∞–≤–∫–∏./n/n
    `.format(), state.options);
}

//–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
async function handleStartMessagePage(state, message){

    if(message && ValidateMarkdown(message)){
        const warnMessage = `üîÅ *${ValidateMarkdown(message)}*`;
        return bot.sendMessage(state.chatId, warnMessage, state.options);
    }

    if(state.stepName === 'content'){

        if(!message){
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', state.options);
        }
            
        state.data.newStartMessage = {
            content: message
        }

        state._actionHandleFunction = handleStartMessagePage;

        //—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        const buttons = CreateButtons([{
            text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
            data: 'main menu'
        },{
            text: '–ù–∞ —à–∞–≥ –Ω–∞–∑–∞–¥ üîô',
            data: 'step back'
        },{
            text: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úîÔ∏è',
            data: 'confirm start_message'
        }])
        
        state.recordStep('confirm start_message', `ü§ù *–ü—Ä–µ–¥–æ—Å–º–æ—Ç—Ä –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è*/n/n
            ${state.data.newStartMessage.content}
        `.format(), buttons);
        
        return state.executeLastStep();
    }
}

//–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
async function handlePaymentPage(state, message){

    if(message && ValidateMarkdown(message)){
        const warnMessage = `üîÅ *${ValidateMarkdown(message)}*`;
        return bot.sendMessage(state.chatId, warnMessage, state.options);
    }

    if(state.stepName === 'content'){

        if(!message){
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ–ø–ª–∞—Ç—ã', state.options);
        }
            
        state.data.newPaymentPage = {
            content: message
        }

        state._actionHandleFunction = handleStartMessagePage;

        //—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        const buttons = CreateButtons([{
            text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
            data: 'main menu'
        },{
            text: '–ù–∞ —à–∞–≥ –Ω–∞–∑–∞–¥ üîô',
            data: 'step back'
        },{
            text: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úîÔ∏è',
            data: 'confirm payment_page'
        }])
        
        state.recordStep('confirm payment_page', `ü´∞ *–ü—Ä–µ–¥–æ—Å–º–æ—Ç—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ–ø–ª–∞—Ç—ã*/n/n
            ${state.data.newPaymentPage.content}
        `.format(), buttons);
        
        return state.executeLastStep();
    }
}

//—É—á–∞—Å—Ç–∏–µ –≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏
async function handleJoinEvent(state, message){

    if(message && message.match(/[\*\(\)\[\]\`_]/g)){
        const warnMessage = `üîÅ *–í–≤–æ–¥ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã*/n/n
        –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ –∏—Å–ø–æ–ª—å–∑—É—è –∫–∏—Ä–∏–ª–ª–∏—Ü—É, –∏–ª–∏ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã`.format();
        return bot.sendMessage(state.chatId, warnMessage, state.options);
    }

    if(state.stepName === 'fullname'){

        if(!message){
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é, –∏–º—è –∏ –æ—Ç—á–µ—Å—Ç–≤–æ', state.options);
        }

        state.data.newParticipant = {
            full_name: message
        }

        state._actionHandleFunction = handleJoinEvent;

        //—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        const buttons = CreateButtons([{
            text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
            data: 'main menu'
        },{
            text: '–ù–∞ —à–∞–≥ –Ω–∞–∑–∞–¥ üîô',
            data: 'step back'
        },{
            text: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É ‚úîÔ∏è',
            data: 'confirm join_event'
        }]);

        //–ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è, –¥–ª—è —É—á–∞—Å—Ç–∏—è
        const event = await db.find('events', [[{
            field: 'id',
            exacly: state.data.id
        }]], true)

        //—Ä–∞—Å—á–µ—Ç –æ–ø–ª–∞—Ç—ã
        const paymentDetails = await calcOfferPayment(event, state, '–£—á–∞—Å—Ç–∏–µ');
        state.data.toPay = paymentDetails.toPay;
        state.data.title = event.title;

        //—Å–ª–µ–¥—É—é—â–∏–π
        state.recordStep('confirm', `*${state.data.newParticipant.full_name}*/n/n
        üî• *–°–æ–±—ã—Ç–∏–µ:* ${event.title}/n
        ‚úä *–ö –æ–ø–ª–∞—Ç–µ:* ${paymentDetails.toPay} ‚ÇΩ/n
        üíØ *–°–∫–∏–¥–∫–∞:* ${paymentDetails.discountSum} %/n/n
        üéÅ *–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –≤ "–ú–æ–∏ –±–æ–Ω—É—Å—ã". 
        –ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞ ‚Äî ${config.invite_discount}%, –¥—Ä—É–≥—É ‚Äî ${config.for_invited_discount}%*/n/n
        ${config.payment_page}
        `.format(), buttons);

        return state.executeLastStep();
    }
}

async function userMerchHandler(state){

    //–ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –º–µ—Ä—á–µ–π –∏ –æ–±—ä–µ–¥–∏–Ω–∏–µ–Ω–∏–µ —Å –∑–∞–∫–∞–∑–∞–º–∏
    const allMerch = await db.find('merch');

    if(!allMerch.length){
        return await bot.sendMessage(state.chatId, '*–ú–µ—Ä—á–∏ –±—É–¥—É—Ç —É–∂–µ —Å–∫–æ—Ä–æ* ‚úä', state.options);
    }

    for(let item of allMerch){

        const {toPay, discountSum} = await calcOfferPayment(item, state, '–ú–µ—Ä—á–∏');
        
        const message = `*${item.title}*/n
        *–¶–µ–Ω–∞:* ${toPay} ‚ÇΩ ${discountSum ? `—Å–∫–∏–¥–∫–∞ ‚Äî ${discountSum} %` : ''}/n/n${item.content}
        `.format();

        const buttons = CreateButtons([{
            text: '–ó–∞–∫–∞–∑–∞—Ç—å üêæ',
            data: `OfferMerch=${item.id}`
        }]);

        await bot.sendMessage(state.chatId, message, buttons);
    }

    await bot.sendMessage(state.chatId, '*–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –æ—Ä–∏–Ω–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–∏–Ω—Ç* üí™', CreateButtons([{
        text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é üîô',
        data: 'main menu'
    }]));
}

//—Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —É—á–∞—Å—Ç–∏—è
async function calcOfferPayment(event, state, category){

    //–ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–∫–∏–¥–æ–∫
    const allDiscounts = await db.find('discounts', [[{
        field: 'category',
        exacly: '–í—Å–µ'
    }],[{
        field: 'category',
        exacly: category
    }]]);

    let discountSum = 0;

    //–ø–æ–≤—ã—à–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏
    for(let discount of allDiscounts){
        if(discount.category === '–í—Å–µ' || discount.category === category){
            discountSum += discount.discount;
        }
    }   

    //–ø–æ–ª—É—á–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const thisUser = await db.find('users', [[{
        field: 'telegram_id',
        exacly: state.chatId
    }]], true);

    discountSum += thisUser.discount;

    //–ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–∫–∏–¥–∫–∞ –Ω–µ –±–æ–ª—å—à–µ 100%
    if(discountSum > 100) discountSum = 100;

    return {toPay: event.price - (event.price * discountSum / 100), discountSum}
}

//–û –Ω–∞—Å
async function handleAboutUsPage(state, message){

    if(message && ValidateMarkdown(message)){
        const warnMessage = `üîÅ *${ValidateMarkdown(message)}*`;
        return bot.sendMessage(state.chatId, warnMessage, state.options);
    }

    if(state.stepName === 'content'){

        if(!message){
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ "–û –Ω–∞—Å"', state.options);
        }
            
        state.data.newAboutUs = {
            content: message
        }

        state._actionHandleFunction = handleAboutUsPage;

        //—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        const buttons = CreateButtons([{
            text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
            data: 'main menu'
        },{
            text: '–ù–∞ —à–∞–≥ –Ω–∞–∑–∞–¥ üîô',
            data: 'step back'
        },{
            text: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úîÔ∏è',
            data: 'confirm about_us'
        }])
        
        state.recordStep('confirm about_us', `üëã *–ü—Ä–µ–¥–æ—Å–º–æ—Ç—Ä –≤–∫–ª–∞–¥–∫–∏ "–û –Ω–∞—Å"*/n/n
            ${state.data.newAboutUs.content}
        `.format(), buttons);
        
        return state.executeLastStep();
    }
}

//—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∞–º–∏
async function giftMenageOptions(state){

    const invtDisBtns = CreateButtons([{
        text: '–ò–∑–º–µ–Ω–∏—Ç—å',
        data: 'edit inv_discount'
    }]);

    await bot.sendMessage(state.chatId, `üíØ *–ó–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ ${config.invite_discount}%, 
    –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–º—É: ${config.for_invited_discount}%*`.format(), invtDisBtns);

    //–ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    const discounts = await db.find('discounts');

    if(!discounts.length){
        await bot.sendMessage(state.chatId, '*–î—Ä—É–≥–∏–µ —Å–∫–∏–¥–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç* ‚úä', {parse_mode: 'Markdown'});
    }

    for(let discount of discounts){
        //–æ–ø—Ü–∏–∏
        const buttons = CreateButtons([{
            text: '–ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å üîÅ',
            data: `EditDiscount=${discount.id}`
        },{
            text: '–£–¥–∞–ª–∏—Ç—å ‚úñÔ∏è',
            data: `DeleteDiscount=${discount.id}`
        }]);

        await bot.sendMessage(state.chatId, `
            *‚Ññ${discount.id} ‚Äî ${discount.title}*/n/n
            üíØ *–°–∫–∏–¥–∫–∞:* ${discount.discount}%/n
            ‚ùì *–ö–∞—Ç–µ–≥–æ—Ä–∏—è:* ${discount.category}
        `.format(), buttons);
    }

    //–æ–ø—Ü–∏–∏
    state.options = CreateButtons([{
        text: '–°–æ–∑–¥–∞—Ç—å —Å–∫–∏–¥–∫—É ‚ûï',
        data: 'add discount'
    },{
        text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é üîô',
        data: 'main menu'
    }])

    await bot.sendMessage(state.chatId, '*–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Å–∫–∏–¥–∫—É üëá*', state.options);
}

//–∏–∑–º–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏ –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
async function handleEditDiscount(state, message){

    const valuesCheck = message.match(/^–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ=\d+\s–ü—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–º—É=\d+$/g);

    if(!valuesCheck){
        return await bot.sendMessage(state.chatId, `‚ÑπÔ∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞:/n/n"–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ=50 –ü—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–º—É=25"`.format(), state.options);
    }

    //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ config
    const invitedValue = message.split(' ')[0].replace('–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ=', '');
    const forInvitedValue = message.split(' ')[1].replace('–ü—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–º—É=', '');

    if(invitedValue > 100 || invitedValue < 0){
        return await bot.sendMessage(state.chatId, `‚ÑπÔ∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. —Å–∫–∏–¥–∫–∞ "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–º—É" –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –¥–∏–∞–ø–æ–∑–æ–Ω–µ –æ—Ç 0 –¥–æ 100.`.format(), state.options);
    }

    if(forInvitedValue > 100 || forInvitedValue < 0){
        return await bot.sendMessage(state.chatId, `‚ÑπÔ∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –°–∫–∏–¥–∫–∞ –∑–∞ "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ" –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –¥–∏–∞–ø–æ–∑–æ–Ω–µ –æ—Ç 0 –¥–æ 100.`.format(), state.options);
    }

    //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ config
    config.invite_discount = Number(invitedValue);
    config.for_invited_discount = Number(forInvitedValue);

    //—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ config
    await fs.writeFile('./config.json', JSON.stringify(config, null, 2));
    state.default();

    await bot.sendMessage(state.chatId, `*–°–∫–∏–¥–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã ‚úîÔ∏è*`, CreateButtons([{text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é üîô', data: 'main menu'}]));
}

async function participantsMenageOptions(state){
    const events = await db.find('events');

    //–æ—Ç—Å—É—Ç—Å–≤–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
    if(!events.length) {
        return await bot.sendMessage(state.chatId, '*–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å–æ–±—ã—Ç–∏–π –Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ* ‚úä', state.options);
    }

    //–ø–æ–∫–∞–∑ –∫–æ—Ä–æ—Ç–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏ –∏ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è (—É—á–∞—Å—Ç–Ω–∏–∫–∏)
    for(let event of events) {
        const message = `
            ‚Ññ${event.id} *${event.title}*/n/n
            üìÖ *–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:* ${new Time(event.event_date).toFriendlyString()}/n
            üîª *–ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:* ${event.place}/n
            ü•ä *–í–µ—Å–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è:* –æ—Ç ${event.weight_from} –¥–æ ${event.weight_to} –∫–≥/n
            ü´∞ *–¶–µ–Ω–∞*: ${event.price} ‚ÇΩ
        `.format();

        //—É—á–∞—Å—Ç–Ω–∏–∫–∏ –ø–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—é
        const buttons = CreateButtons([{
            text: '–£—á–∞—Å—Ç–Ω–∏–∫–∏',
            data: `participants=${event.id}`
        }])

        await bot.sendMessage(state.chatId, message, buttons);
    }   

    state.options = CreateButtons([{
        text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é',
        data: 'main menu'
    }]);

    return bot.sendMessage(state.chatId, '*–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ç–æ–≥–æ –∏–ª–∏ –∏–Ω–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è*', state.options);
}

//–ø—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–±—ã—Ç–∏–π –∏ —É—á–∞—Å—Ç–∏–µ
async function eventsList(state){
    //–≤—Å–µ —Å–æ–±—ã—Ç–∏—è
    const allEvents = await db.find('events', [[{
        field: 'event_date',
        more: new Time().shortUnix()
    }]]);

    if(!allEvents.length){
        return await bot.sendMessage(state.chatId, '*–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å–æ–±—ã—Ç–∏–π –Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ* ‚úä', state.options);
    }

    //–≤—ã–≤–æ–¥ —Å–æ–±—ã—Ç–∏–π
    for(let event of allEvents) {

        //–ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –Ω–∞ —Ç–∞–∫–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
        const existOffer = await db.find('event_offers', [[{
            field: 'telegram_id',
            exacly: state.chatId
        }, {
            field: 'event_id',
            exacly: event.id
        }]], true)

        //–∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç–∏—è
        const joinButtons = existOffer ? CreateButtons([{
            text: '–ó–∞—è–≤–∫–∞ –ø–æ–¥–∞–Ω–∞ ‚úîÔ∏è',
            data: 'member'
        }]) : CreateButtons([{
            text: '–ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ ü•ä',
            data: 'JoinEvent=' + event.id
        }])

        const {toPay, discountSum} = await calcOfferPayment(event, state, '–£—á–∞—Å—Ç–∏–µ');

        await bot.sendMessage(state.chatId, `*${event.title}*/n/n
        üìÖ *–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:* ${new Time(event.event_date).toFriendlyString()}/n
        üîª *–ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:* ${event.place}/n
        ü•ä *–í–µ—Å–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è:* –æ—Ç ${event.weight_from} –¥–æ ${event.weight_to} –∫–≥/n
        ‚úä *–£—á–∞—Å—Ç–∏–µ*: ${toPay} ‚ÇΩ ${discountSum ? ` ‚Äî —Å–∫–∏–¥–∫–∞ ${discountSum} %` : ''}/n/n
        ${event.content}`.format(), joinButtons);
    }

    return await bot.sendMessage(state.chatId, '‚Ñπ –ß—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ–±—ã—Ç–∏–µ –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω—É—é –∑–∞—è–≤–∫—É', CreateButtons([{
        text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é üîô',
        data: 'main menu'
    }]));
}

//–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
async function confirmOfferMerch(state){
    
    state.callTimeoutLimit(64800000, 'new offer', 3);

    if(!state.timeoutIsEnd('new offer')){
        state.default();
        return await bot.sendMessage(state.chatId, `‚ÑπÔ∏è *–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –Ω–∞ 3 –∑–∞–∫–∞–∑–∞ –≤ —Å—É—Ç–∫–∏*`.format(), state.options);
    }

    //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É—á–∞—Å—Ç–∏—è
    const merchOfferId = await db.insert('merch_offers', {
        telegram_id: state.chatId,
        merch_id: state.data.id,
        title: state.data.title,
        toPay: state.data.toPay
    });

    const user = await db.find('users', [[{field: 'telegram_id', exacly: state.chatId}]], true);

    //—Å–±—Ä–æ—Å —Å–∫–∏–¥–∫–∏
    if(user.discount){
        await db.update('users', {discount: 0}, [[{field: 'telegram_id', exacly: state.chatId}]]);
    }

    //–≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    await bot.sendMessage(ADMIN_TELEGRAM_ID, `‚Ñπ *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É –º–µ—Ä—á–∞: "${state.data.title}*"/n/n
    *–û—Ç:* @${escapeMarkdown(state.data.username)}/n
    *–ö –æ–ø–ª–∞—Ç–µ:* ${state.data.toPay} ‚ÇΩ/n/n
    *–ó–∞—è–≤–∫–∞ —Ç–∞–∫–∂–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∞ –≤ "–ó–∞–∫–∞–∑–∞—Ö", –≥–¥–µ –µ–µ –º–æ–∂–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–∏—Ç—å*
    `.format(), CreateButtons([{
        text: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úîÔ∏è',
        data: `AcceptOffer=merch:${merchOfferId}`
    },{
        text: '–û—Ç–∫–∞–∑–∞—Ç—å ‚úñÔ∏è',
        data: `DeleteOffer=merch:${merchOfferId}`
    }], false));

    state.default();
    //—Ä–∞—Å—Å—ã–ª–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await bot.sendMessage(state.chatId, `*–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è* ‚úîÔ∏è`, state.options);
}

//–º–æ–∏ –º–µ—Ä—á
async function myMerchOffer(state){
    
    //–ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –º–µ—Ä—á–µ–π –∏ –æ–±—ä–µ–¥–∏–Ω–∏–µ–Ω–∏–µ —Å –∑–∞–∫–∞–∑–∞–º–∏
    const myMerch = (await db.find('merch_offers', [[{
        field: 'telegram_id', exacly: state.chatId
    }]]));

    if(!myMerch.length){
        return await bot.sendMessage(state.chatId, '*–£ –≤–∞—Å –ø–æ–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–∫–∞–∑—ã* ‚úä\n\n–ó–∞–∫–∞–∂–∏ —Å–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –º–µ—Ä—á –≤ *"–ó–∞–∫–∞–∑–∞—Ç—å –º–µ—Ä—á"* üëá', state.options);
    }

    for(let item of myMerch){

        //–æ–¥–æ–±—Ä–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑
        if(item.accepted){

            //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
            const base64UrlCommand = btoa(`ConfirmMerch=${item.recive_key}`);
            const checkofferUrl = `https://t.me/${BOT_USERNAME}?start=${base64UrlCommand}`

            //qr-–∫–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
            const qrCodeBuffer = await QRCode.toBuffer(checkofferUrl, {type: 'png'});

            const message = `*–ü—Ä–µ–¥—ä—è–≤–∏—Ç–µ –¥–∞–Ω–Ω—ã–π QR –∫–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞*/n/n
            *${item.title}*/n*–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞:* –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω ‚úîÔ∏è/n
            *–ó–∞–∫–∞–∑–∞–Ω:* ${new Time(item.created_at).toFriendlyString()}`.format();

            //—Å–æ–æ–±—â–µ–Ω–∏–µ
            await bot.sendPhoto(state.chatId, qrCodeBuffer, {
                caption: message,
                parse_mode: 'Markdown'
            });
        }
        //–æ–∂–∏–¥–∞—é—â–∏–π
        else {

            const message = `*${item.title}*/n
                *–¶–µ–Ω–∞:* ${item.toPay} ‚ÇΩ/n
                *–ó–∞–∫–∞–∑–∞–Ω:* ${new Time(item.created_at).toFriendlyString()}/n/n
                *–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞:* –û–∂–∏–¥–∞–µ—Ç –ø–æ–¥–≤–µ—Ä–∂–¥–µ–Ω–∏—è ‚Ñπ
            `.format();

            await bot.sendMessage(state.chatId, message, {parse_mode: 'Markdown'});
        }
    }

    await bot.sendMessage(state.chatId, '*–ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –≤–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω QR –∫–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ä—á–∞* üí™', CreateButtons([{
        text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é üîô',
        data: 'main menu'
    }]));
}

//–∑–∞–∫–∞–∑ –º–µ—Ä—á–∞
async function offerMerch(state, merchId){

    //–ø–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ä—á–∞
    const merch = await db.find('merch', [[{
        field: 'id',
        exacly: merchId
    }]], true);

    //—Ä–∞—Å—á–µ—Ç –æ–ø–ª–∞—Ç—ã
    const {toPay, discountSum} = await calcOfferPayment(merch, state, '–ú–µ—Ä—á–∏');

    //–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    state.data.id = merchId;
    state.data.title = merch.title;
    state.data.toPay = toPay;

    //—Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = `
        *${merch.title}*/n
        ‚úä *–ö –æ–ø–ª–∞—Ç–µ:* ${toPay} ‚ÇΩ/n
        üíØ *–°–∫–∏–¥–∫–∞:* ${discountSum} %/n/n
        üéÅ *–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –≤ "–ú–æ–∏ –±–æ–Ω—É—Å—ã". 
        –ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞ ‚Äî ${config.invite_discount}%, –¥—Ä—É–≥—É ‚Äî ${config.for_invited_discount}%*/n/n
        ${config.payment_page}
    `.format();

    //–∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    state.options = CreateButtons([{
        text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é üîô',
        data: `main menu`
    },{
        text: '–ó–∞–∫–∞–∑–∞—Ç—å ‚úîÔ∏è',
        data: 'confirm'
    }]);

    await bot.sendMessage(state.chatId, message, state.options);
}

//–æ–±—Ä–∞–±–æ—Ç–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º
async function participantsList(state, eventId){

    //–ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    const participants = await db.find('event_offers', [[{
        field: 'accepted', exacly: 1
    }, {
        field: 'event_id', exacly: eventId
    }]]);

    //–µ—Å–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç
    if(!participants.length){
        return bot.sendMessage(state.chatId, '*–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç* ‚úä', {parse_mode: 'Markdown'});
    }

    //–≤—ã–≤–æ–¥ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    for(let participant of participants){

        //–ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const currentUser = await db.find('users', [[{
            field: 'telegram_id',
            exacly: participant.telegram_id
        }]], true);

        //–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—á–∞—Å—Ç–Ω–∏–∫–µ
        const message = `
            *–§–ò–û:* ${participant.full_name}/n
            *–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞:* ${new Time(participant.created_at).toFriendlyString()}/n/n
            *–¢–µ–ª–µ–≥—Ä–∞–º —É—á–∞—Å—Ç–Ω–∏–∫–∞:* @${escapeMarkdown(currentUser.username)}/n
        `.format();

        await bot.sendMessage(state.chatId, message, {parse_mode: 'Markdown'});
    }

    await bot.sendMessage(state.chatId, '*–¢—É—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, —É—á–µ—Å—Ç–∏–µ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –ø–æ–¥–≤–µ—Ä–¥–∏–ª–∏ –≤ –∑–∞—è–≤–∫–∞—Ö –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è*', CreateButtons([{
        text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é üîô',
        data: 'main menu'
    }]));
}

//–ø–æ–¥—Ç–≤—Ä–µ–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
async function confirmOffer(state, offerType, offerId){
    const table = offerType === 'event' ? 'event_offers' : 'merch_offers';

    //–ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    const offer = await db.find(table, [[{
        field: 'id',
        exacly: offerId
    }]], true);

    if(!offer) return bot.sendMessage(state.chatId, '*–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω* ‚úä', {parse_mode: 'Markdown'});

    if(offer.accepted) return bot.sendMessage(state.chatId, '*–ó–∞–∫–∞–∑ —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω* ‚úä', {parse_mode: 'Markdown'});

    const offerClause = offerType === 'event' ? '—É—á–∞—Å—Ç–∏–µ –≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏' : '–ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –º–µ—Ä—á–∞';

    //–≥–µ–Ω–µ—Ä–∏—Ü–∏—è –∫–æ–¥–∞, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
    const recive_key = RandCode(12);

    const thisOffer = await db.find(table, [[{field: 'id', exacly: offerId}]], true);

    //–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–ª–∞—Ç–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
    const user = await db.find('users', [[{field: 'telegram_id', exacly: thisOffer.telegram_id}]], true);

    //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–≤–æ–≥–æ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞
    if(!user.made_first_offer){
        await db.update('users', {made_first_offer: 1}, [[{field: 'telegram_id', exacly: thisOffer.telegram_id}]]);
        if(user.invited_by) {
            const invitedByUser = await db.find('users', [[{field: 'telegram_id', exacly: user.invited_by}]], true);
            const newDiscount = invitedByUser.discount += config.invite_discount;
            const normalDiscount = newDiscount > 100 ? 100 : newDiscount;
            await db.update('users', {discount: normalDiscount}, [[{field: 'telegram_id', exacly: user.invited_by}]]);
            await bot.sendMessage(user.invited_by, `*–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${user.username} —Å–¥–µ–ª–∞–ª –ø–ª–∞—Ç–Ω—ã–π –∑–∞–∫–∞–∑*/n/n
            üéÅ –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –±–æ–Ω—É—Å ${config.invite_discount} % –Ω–∞ –≤—Å–µ`.format(), {parse_mode: 'Markdown'});
        }
    }

    await db.update(table, {accepted: 1, recive_key}, [[{
        field: 'id',
        exacly: offerId
    }]]);

    await bot.sendMessage(state.chatId, `*–ó–∞–∫–∞–∑ –Ω–∞ ${offerClause} "${offer.title}" –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω ‚úîÔ∏è*`, {parse_mode: 'Markdown'});

    //—Ä–∞—Å—Å—ã–ª–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await bot.sendMessage(user.telegram_id, `*–ó–∞–∫–∞–∑ –Ω–∞ ${offerClause} "${offer.title}" –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω ‚úîÔ∏è*/n/n
        –î–µ—Ç–∞–ª–∏ –ø–æ –∑–∞–∫–∞–∑—É —Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ –≤–∫–ª–∞–¥–∫–µ ${offerType === 'event' ? '"–£—á–∞—Å—Ç–Ω–∏–∫–∞–º"' : '"–ú–æ–∏ –º–µ—Ä—á–∏"'}
        `.format(), {parse_mode: 'Markdown'});
}

//–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
async function deleteOffer(state, offerType, offerId){

    const table = offerType === 'event' ? 'event_offers' : 'merch_offers';
    const offerClause = offerType === 'event' ? '—É—á–∞—Å—Ç–∏–µ –≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏' : '–ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –º–µ—Ä—á–∞';

    //–ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    const offer = await db.find(table, [[{
        field: 'id',
        exacly: offerId
    }]], true);

    if(!offer) return bot.sendMessage(state.chatId, '*–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–∏ÃÜ–¥–µ–Ω* ‚úä', {parse_mode: 'Markdown'});

    await db.delete(table, [[{
        field: 'id',
        exacly: offerId
    }]]);

    await bot.sendMessage(state.chatId, `*–ó–∞–∫–∞–∑ –Ω–∞ ${offerClause} ‚Ññ${offerId} –æ—Ç–º–µ–Ω–µ–Ω ‚úîÔ∏è*`, {parse_mode: 'Markdown'});
}

//—É–¥–∞–ª–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏
async function deleteMail(state, mailingId){

    //–ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏
    const existMailing = await db.find('mailings', [[{field: 'id', exacly: mailingId}]], true)

    if(!existMailing) {
        return await bot.sendMessage(state.chatId, '*–†–∞—Å—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞* ‚úä', {parse_mode: 'Markdown'});
    }

    //—É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    await db.delete('mailings', [[{
        field: 'id',
        exacly: mailingId
    }]]);

    //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–π–º–∞—É—Ç–æ–≤ —Ä–∞—Å—Å—ã–ª–∫–∏
    updateMailingTimer(mailingId);

    //–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    bot.sendMessage(state.chatId, `*–†–∞—Å—Å—ã–ª–∫–∞ ‚Ññ${mailingId} —É–¥–∞–ª–µ–Ω–∞* ‚úîÔ∏è`, state.options);
}

//—É–ø—Ä–∞–≤–ª–µ–Ω–µ–∏ —Ä–∞—Å—Å—ã–ª–∫–∞–º–∏
async function mailingsMenageOptions(state){
    const allMailings = await db.find('mailings');

    //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ä–∞—Å—Å—ã–ª–æ–∫
    if(!allMailings.length) await bot.sendMessage(state.chatId, '*–†–∞—Å—Å—ã–ª–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç* ‚úä', {parse_mode: 'Markdown'});

    //–ø—Ä–∏—Å—ã–ª–∞–Ω–µ–∏ –≤—Å–µ—Ö —Ä–∞—Å—Å—ã–ª–æ–∫
    for(let mailing of allMailings){

        //–∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        const buttons = CreateButtons([{
            text: '–ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å üîÅ',
            data: `EditMail=${mailing.id}`
        }, {
            text: '–£–¥–∞–ª–∏—Ç—å ‚úñÔ∏è',
            data: `DeleteMail=${mailing.id}`
        }])

        //—Å–æ–æ–±—â–µ–Ω–∏–µ
        const message = `
            *‚Ññ${mailing.id} ‚Äî ${mailing.title}*/n/n
            üì® *–¢–∏–ø —Ä–∞—Å—Å—ã–ª–∫–∏:* ${mailing.send_type}/n
            ${mailing.repeats ? `üîÅ *–ü–æ–≤—Ç–æ—Ä—è—Ç—å –∫–∞–∂–¥—ã–µ:* ${TextDayFormat(mailing.repeats/86400)}` : `üìÖ *–û—Ç–ø—Ä–∞–≤–∫–∞:* ${new Time(mailing.response_time).toFriendlyString()}`}/n
            üë• *–ê—É–¥–∏—Ç–æ—Ä–∏—è:* ${mailing.audience}/n/n
            ${mailing.content}
        `.format();

        //–æ—Ç–ø—Ä–∞–≤–∫–∞
        await bot.sendMessage(state.chatId, message, buttons);
    }

    //–æ–ø—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    state.options = CreateButtons([{
        text: '–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Ä–∞—Å—Å—ã–ª–∫—É ‚ûï',
        data: 'add mail'
    },{
        text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é üîô',
        data: 'main menu'
    }]);

    //–ø–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫–∏ —Å–Ω–æ–≤–∞
    bot.sendMessage(state.chatId, '*–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ä–∞—Å—Å—ã–ª–∫—É üëá*', state.options);
}

//–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–π–º–µ—Ä–æ–≤ –∏ —Ç–∞–π–º–∞—É—Ç–æ–≤ —Ä–∞—Å—Å—ã–ª–æ–∫
async function mailingSender(mail, callbackMessage, deleteAfter = false){

    //–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    await sendMail(mail);

    //—É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if(deleteAfter){
        await db.delete('mailings', [[{field: 'id', exacly: mail.id}]])
    }

    if(callbackMessage){
        //—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        await bot.sendMessage(...Object.values(callbackMessage));
    }
}

let mailingsTimers = [];

//–¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–∞–π–º–∞—É—Ç–æ–≤ –∏ —Ç–∞–π–º–µ—Ä–æ–≤
function clearTimer(timerId) {
    // –û—á–∏—â–∞–µ–º –∏ —Ç–∞–π–º–∞—É—Ç—ã, –∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
    clearTimeout(timerId);  // —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ —Å —Ç–∞–π–º–∞—É—Ç–∞–º–∏, –∏ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏
}

//–æ–±–Ω–æ–≤–ª–µ–Ω–µ–∏ —Ç–∞–π–º–∞—É—Ç–æ–≤ –∏ —Ç–∞–π–º–µ—Ä–æ–≤
async function updateMailingTimer(mailingId){

    //—Ç–∞–π–º—É—Ç –Ω–∞ –∑–∞–º–µ–Ω—É
    changedMailingTimer = mailingsTimers.find(item => item.id == mailingId);
    
    if(changedMailingTimer){
        clearTimer(changedMailingTimer.timerId);
        mailingsTimers = mailingsTimers.filter(item => item.id != mailingId);
    }

    //–ø–æ–∏—Å–∫ —Ä–∞—Å—Å—ã–ª–∫–∏
    const mailing = await db.find('mailings', [[{field: 'id', exacly: mailingId}]], true);

    //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–π–º–∞—É—Ç–∞
    if(mailing) setMailingTimer(mailing);
}

async function initMailingsTimers(){
    const allMails = await db.find('mailings');

    //–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å—Å—ã–ª–æ–∫    
    for(let mail of allMails){
        setMailingTimer(mail);
    }
}

//—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–∞—É—Ç–∞
function setMailingTimer(mail){

    const timeNow = new Time().shortUnix();

    //—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const message = {
        chatId: ADMIN_TELEGRAM_ID, text: '',
        options: {parse_mode: 'Markdown'}
    }

    //–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ –ø–∏—Å—å–º–∞ –∏ —Å—Ä–æ–∫–æ–≤
    if(mail.send_type === "–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è" && timeNow <= mail.response_time){
        //—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        message.text = `*–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ ‚Ññ${mail.id} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –∏ –æ—á–∏—â–µ–Ω–∞* ‚úîÔ∏è`;

        //–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–π–º–µ—Ä–æ–≤ –∏ —Ç–∞–π–º–∞—É—Ç–æ–≤ —Ä–∞—Å—Å—ã–ª–æ–∫
        const timerId = setTimeout(() => mailingSender(mail, message, true), (mail.response_time - timeNow) * 1000);

        mailingsTimers.push({id: mail.id, timerId});
    }

    //–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ –ø–∏—Å—å–º–∞ –∏ —Å—Ä–æ–∫–æ–≤
    if(mail.send_type === "–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è"){
        //—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        message.text = `*–ü–µ—Ä–µ–æ–¥–∏—á–µ—Å–∫–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ ‚Ññ${mail.id} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ ‚úîÔ∏è*/n/n
        –°–ª–µ–¥—É—é—â–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑: ${TextDayFormat(mail.repeats/86400)}`.format();

        //–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–π–º–µ—Ä–æ–≤ –∏ —Ç–∞–π–º–∞—É—Ç–æ–≤ —Ä–∞—Å—Å—ã–ª–æ–∫
        const timerId = setInterval(() => mailingSender(mail, message), mail.repeats * 1000);

        mailingsTimers.push({id: mail.id, timerId});
    }
}

//–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(3030, '0.0.0.0', async () => {
    console.clear();
    await initConnection();
    await initMailingsTimers();
   WriteInLogFile(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT || 3030} ‚ú®`);
})