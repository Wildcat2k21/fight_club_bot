const { getServices } = require('@services');
const { bot, db } = getServices();
const ADMIN_TELEGRAM_ID = Number(process.env.ADMIN_TELEGRAM_ID);
const createButtons = require("@utils/create-buttons");

//—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–¥–∫–∏
async function sendMail(mail) {

    let userToMail;

    //–æ–±—Ä–±–∞–æ—Ç–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
    switch (mail.audience) {
        case '–í—Å–µ–º': {
            const users = await db.find('users');
            userToMail = users;
            break;
        }
        case '–£—á–∞—Å—Ç–Ω–∏–∫–∞–º': {
            const eventOffers = await db.find('event_offers');
            userToMail = eventOffers;
            break;
        }
        case '–í—Å–µ–º, –∫—Ä–æ–º–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤': {
            const eventOffers = await db.find('event_offers');
            const users = await db.find('users');
            userToMail = users.filter(user => !eventOffers.some(participant => participant.telegram_id === user.telegram_id));
            break;
        }
    }

    //—Ä–∞—Å—Å—ã–ª–∫–∞
    for (let user of userToMail) {

        if (user.telegram_id === ADMIN_TELEGRAM_ID) continue

        //–î–æ–º–æ–π
        const homeButton = createButtons([{
            text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é üîô',
            data: 'main menu'
        }])

        try {
            await bot.sendMessage(user.telegram_id, `
                *${mail.title}*/n/n
                ${mail.content}
            `.format(), homeButton);
        }
        catch { /* empty */ }
    }
}

module.exports = sendMail;