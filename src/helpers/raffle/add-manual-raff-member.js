const { getServices } = require('@services');
const { bot, db } = getServices();
const createButtons = require('@utils/create-buttons');

async function addManualRaffMember(state, message){

    //eslint-disable-next-line no-useless-escape
    if (message && message.match(/[\*\(\)\[\]\`_]/g)) {
        const warnMessage = `üîÅ *–í–≤–æ–¥ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã*/n/n
        –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ –∏—Å–ø–æ–ª—å–∑—É—è –∫–∏—Ä–∏–ª–ª–∏—Ü—É, –∏–ª–∏ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã`.format();
        return bot.sendMessage(state.chatId, warnMessage, state.options);
    }

    if(state.stepName === "fullname"){
        if(!message){
            return await bot.sendMessage(state.chatId, "üîÅ –í–≤–µ–¥–∏—Ç–µ –§–ò–û —É—á–∞—Å—Ç–Ω–∏–∫–∞", state.options);
        }

        state._actionHandleFunction = addManualRaffMember;

        state.data.fullname = message;

        state.recordStep("phone", "‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞", createButtons([{
            text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
            data: 'main menu'
        },
        {
            text: '–ù–∞ —à–∞–≥ –Ω–∞–∑–∞–¥ üîô',
            data: 'step back'
        }]));

        return state.executeLastStep();
    }

    if(state.stepName === "phone"){
        if(!message){
            return await bot.sendMessage(state.chatId, "üîÅ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞", state.options);
        }

        const numStr = message.replaceAll(' ', '');

        if(isNaN(numStr) || numStr.length !== 11) {
            return await bot.sendMessage(state.chatId, "üîÅ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–º–µ–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.\n\n–ü—Ä–∏–º–µ—Ä: 8 987 654 32 10", state.options);
        }

        state.data.phone = message;

        state.recordStep("preview", `
            *–§–ò–û: * ${state.data.fullname}/n
            *–¢–µ–ª–µ—Ñ–æ–Ω: * ${state.data.phone}/n`
            .format(), createButtons([{
                text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
                data: 'main menu'
            },
            {
                text: '–ù–∞ —à–∞–≥ –Ω–∞–∑–∞–¥ üîô',
                data: 'step back'
            },
            {
                text: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úîÔ∏è',
                data: 'confirmNewManualRaffMember'
            }]));

        return state.executeLastStep();
    }
}

module.exports = addManualRaffMember;