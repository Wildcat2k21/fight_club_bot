const { getServices } = require('@services');
const { bot, db } = getServices();
const createButtons = require('@utils/create-buttons');

// –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞
async function confirmNewRaffle(state) {
    // —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–æ–∑—ã–≥—Ä—ã—à
    const raffleId = await db.insert('raffles', {
        title: state.data.newRaffleData.title,
        place: state.data.newRaffleData.place,
        raffle_date: state.data.newRaffleData.raffle_date,
        content: state.data.newRaffleData.content,
        price: state.data.newRaffleData.price
    });

    state.data.id = raffleId;

    // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏–∑—ã –≤ winners (–ø—Ä–∏–≤—è–∑–∫–∞ –∫ —Ä–æ–∑—ã–≥—Ä—ã—à—É, –±–µ–∑ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è)
    if (state.data.newRaffleData.prizes && state.data.newRaffleData.prizes.length > 0) {
        for (let prize of state.data.newRaffleData.prizes) {
            await db.insert('winners', {
                raffle_id: raffleId,
                prize: prize,
                raffle_offer_id: null // –ø–æ–∫–∞ –±–µ–∑ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
            });
        }
    }

    // –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
    state.recordStep('notify', '*–†–æ–∑—ã–≥—Ä—ã—à –¥–æ–±–∞–≤–ª–µ–Ω ‚úîÔ∏è*', createButtons([
        { text: '–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É —Ä–æ–∑—ã–≥—Ä—ã—à–∞ üì®', data: 'notify raffle' },
        { text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é üîô', data: 'main menu' }
    ]));

    // –≤—ã–ø–æ–ª–Ω—è–µ–º —à–∞–≥
    state.executeLastStep();
}

module.exports = confirmNewRaffle;
