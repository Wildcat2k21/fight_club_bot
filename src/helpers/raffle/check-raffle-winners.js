const { getServices } = require('@services');
const { bot, db } = getServices();
const createButtons = require('@utils/create-buttons');
const escapeMarkdown = require('@utils/escape-markdown');

async function checkRaffleWinners(state, msgData){
    const raffleId = msgData.split('=')[1];

    const raffle_winners = await db.find('raffle_winners', [[{ field: 'raffle_id', exacly: raffleId}, {
        field: 'raffle_ticket_id', isNull: false
    }]]);

    if(!raffle_winners.length) {
        return bot.sendMessage(state.chatId, "–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏ –ø–æ–∫–∞ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã ‚úñÔ∏è");
    }

    for(let winner of raffle_winners) {

        const winnerTicket = await db.find('raffle_tickets', [[{
            field: 'raffle_id', exacly: winner.raffle_id
        },
        {
            field: 'ticket_id', exacly: winner.raffle_ticket_id
        }]], true);

        const winnerTelegram = await db.find('users', [[{ field: 'telegram_id', exacly: winnerTicket.user_telegram_id }]], true);

        await bot.sendMessage(state.chatId, `
            *–ë–∏–ª–µ—Ç ‚Ññ${winnerTicket.ticket_id}*/n/n
            *üèÜ –ü—Ä–∏–∑–æ–≤–æ–µ –º–µ—Å—Ç–æ:* ${winner.position}/n
            *üë§ –§–ò–û:* ${winnerTicket.fullname}/n
            *üìû –¢–µ–ª–µ—Ñ–æ–Ω:* ${winnerTicket.phone}
            ${
                winnerTelegram ?
                    `/n*üí¨ –ö–æ–Ω—Ç–∞–∫—Ç:* @${escapeMarkdown(winnerTelegram.username)}` :
                    '/n/n*‚ùóÔ∏è –£—á–∞—Å—Ç–Ω–∏–∫ —É–∫–∞–∑–∞–Ω –≤—Ä—É—á–Ω—É—é, –±–∏–ª–µ—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–≤–µ—Ä–µ–Ω —á–µ—Ä–µ–∑ QR –∫–æ–¥, —Å–≤—è–∑—å —Å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≤–æ–∑–º–æ–∂–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É.*'
            }
        `.format(), { parse_mode: 'Markdown' });
    }

    return bot.sendMessage(state.chatId, "‚úîÔ∏è –≠—Ç–æ –≤—Å–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª–∏ –¥–∞–Ω–Ω–æ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞",
        createButtons([{
        text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é üîô',
        data: 'main menu'
    }]));
}

module.exports = checkRaffleWinners;