const { getServices } = require('@services');
const { bot, db } = getServices();
const createButtons = require('@utils/create-buttons');

//–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
async function confirmNewEvent(state) {

    //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
    if (state.data.replaceEventId) {
        await db.update('events', state.data.newEventData, [[{
            field: 'id',
            exacly: state.data.replaceEventId
        }]]);

        bot.sendMessage(state.chatId, `*–°–æ–±—ã—Ç–∏–µ ‚Ññ${state.data.replaceEventId} –æ–±–Ω–æ–≤–ª–µ–Ω–æ ‚úîÔ∏è*`, state.options);
        state.default();
    }
    //–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
    else {
        //–∫–Ω–æ–ø–∫–∏  —Ä–∞—Å—Å—ã–ª–∫–∏
        state.data.id = await db.insert('events', state.data.newEventData);
        state.recordStep('notify', '*–°–æ–±—ã—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ ‚úîÔ∏è*', createButtons([{
            text: '–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É —Å–æ–±—ã—Ç–∏—è üì®',
            data: 'notify'
        }, {
            text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é üîô',
            data: 'main menu'
        }]));

        //–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∞–≥–∞
        state.executeLastStep();
    }
}

module.exports = confirmNewEvent;