const { getServices } = require('@services');
const { bot } = getServices();
const createButtons = require('@utils/create-buttons');
const validateMarkdown = require('@utils/validate-markdown');

//–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –º–µ—Ä—á–∞
function handleMerchMenagment(state, message) {

    if (message && validateMarkdown(message)) {
        const warnMessage = `üîÅ *${validateMarkdown(message)}*`;
        return bot.sendMessage(state.chatId, warnMessage, state.options);
    }

    //—É–∫–∞–∑–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
    if (state.stepName === 'name') {

        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞
        if (!message) {
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —Ç–æ–≤–∞—Ä–∞', state.options);
        }

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
        state.data.newMerchData = {
            title: message
        }

        //—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        state._actionHandleFunction = handleMerchMenagment;

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
        state.recordStep('price', 'üí∏ –í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –∑–∞ –ø–æ–∫—É–ø–∫—É –≤ —Ä—É–±–ª—è—Ö ‚ÇΩ', createButtons([{
            text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
            data: 'main menu'
        }, {
            text: '–ù–∞ —à–∞–≥ –Ω–∞–∑–∞–¥ üîô',
            data: 'step back'
        }]))

        return state.executeLastStep();
    }

    //—É–∫–∞–∑–∞–Ω–∏–µ –¥–∞—Ç—ã –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è
    if (state.stepName === 'price') {

        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã
        if (!message || isNaN(message) || Number(message) < 0) {
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –∑–∞ –ø–æ–∫—É–ø–∫—É –≤ —Ä—É–±–ª—è—Ö ‚ÇΩ', state.options);
        }

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞—Ç—ã –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è
        state.data.newMerchData.price = message;

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
        state.recordStep('content', 'ü§≥ –í–≤–µ–¥–∏—Ç–µ –ø–æ—Å—Ç –æ —Ç–æ–≤–∞—Ä–µ', state.options);
        return state.executeLastStep();
    }

    //—É–∫–∞–∑–∞–Ω–∏–µ –ø–æ—Å—Ç–∞ —Å–æ–±—ã—Ç–∏—è
    if (state.stepName === 'content') {

        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞
        if (!message) {
            return bot.sendMessage(state.chatId, 'üîÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–æ—Å—Ç –æ —Ç–æ–≤–∞—Ä–µ', state.options);
        }

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞—Ç—ã –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è
        state.data.newMerchData.content = message;

        const priceClause = Number(state.data.newMerchData.price) ? `${state.data.newMerchData.price} ‚ÇΩ` : "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ";

        //—Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        const buttons = createButtons([{
            text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
            data: 'main menu'
        }, {
            text: '–ù–∞ —à–∞–≥ –Ω–∞–∑–∞–¥ üîô',
            data: 'step back'
        }, {
            text: '–ü–æ–¥–≤–µ—Ä–¥–∏—Ç—å ‚úîÔ∏è',
            data: 'confirm new merch'
        }]);

        //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
        state.recordStep('confirm new merch', `
            *${state.data.newMerchData.title}*/n
            *–¶–µ–Ω–∞:* ${priceClause}/n/n
            ${state.data.newMerchData.content}
        `.format(), buttons);

        //–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∞–≥–∞
        return state.executeLastStep();
    }
}

module.exports = handleMerchMenagment;