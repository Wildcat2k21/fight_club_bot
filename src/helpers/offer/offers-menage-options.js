const { getServices } = require('@services');
const { bot, db } = getServices();
const createButtons = require('@utils/create-buttons');
const escapeMarkdown = require('@utils/escape-markdown');

//—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏
async function offersMenageOptions(state) {
    const merchOffers = (await db.executeWithReturning('SELECT * FROM merch_offers')).map(item => ({ ...item, type: 'merch' }));
    const eventOffers = (await db.executeWithReturning('SELECT * FROM event_offers')).map(item => ({ ...item, type: 'event' }));
    const totalOffers = [...merchOffers, ...eventOffers];
    //–≤—ã–≤–æ–¥ –∑–∞–∫–∞–∑–æ–≤, –æ—Ç—Å–∞—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –ø–æ–ª—é accepted 0
    const sortedOffers = totalOffers.sort((a, b) => a.accepted - b.accepted);

    //–µ—Å–ª–∏ –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç
    if (!sortedOffers.length) {
        return bot.sendMessage(state.chatId, '*–ó–∞–∫–∞–∑–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ* ‚úä', { parse_mode: 'Markdown' });
    }

    //–≤—ã–≤–æ–¥ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤
    for (let offer of sortedOffers) {

        const offerUser = await db.find('users', [[{
            field: 'telegram_id',
            exacly: offer.user_telegram_id
        }]], true);

        let buttons;

        const offerTypeCase = offer.type === 'merch' ? '–Ω–∞ —Ç–æ–≤–∞—Ä' : '–Ω–∞ —É—á–∞—Å—Ç–∏–µ –≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏';

        const priceClause = Number(offer.to_pay) ? `${offer.to_pay} ‚ÇΩ` : "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ";

        //—Å–æ–æ–±—â–µ–Ω–∏–µ
        const message = `*–ó–∞–∫–∞–∑ ${offerTypeCase} ‚Ññ${offer.id}: "${offer.title}"*/n/n
        *–°—Ç–∞—Ç—É—Å:* ${offer.accepted ? '–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω ‚úîÔ∏è' : '–û–∂–∏–¥–∞–µ—Ç –≤–∞—à–µ–≥–æ –ø–æ–¥–≤–µ—Ä–∂–¥–µ–Ω–∏—è ‚Ñπ'}/n
        *–ö –æ–ø–ª–∞—Ç–µ:* ${priceClause}/n/n
        üë§ *–û—Ç:* @${escapeMarkdown(offerUser.username)}/n
        `.format();

        //–∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞–º–∏
        if (!offer.accepted) {

            //–∫–Ω–æ–ø–∫–∏ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            buttons = createButtons([{
                text: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úîÔ∏è',
                data: `AcceptOffer=${offer.type}:${offer.id}`
            }, {
                text: '–û—Ç–∫–∞–∑–∞—Ç—å ‚úñÔ∏è',
                data: `DeleteOffer=${offer.type}:${offer.id}`
            }], false);

        }

        //—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        await bot.sendMessage(state.chatId, message, buttons || createButtons([{
            text: '–£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑ ‚úñÔ∏è',
            data: `DeleteOffer=${offer.type}:${offer.id}`
        }]));
    }

    state.options = createButtons([{
        text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é üîô',
        data: 'main menu'
    }])

    await bot.sendMessage(state.chatId, `‚Ñπ *–£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑ –º–æ–∂–Ω–æ –ø–æ—Å–ª–µ –µ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.*/n
    –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —ç—Ç–æ –¥–µ–ª–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—á–∞—Å—Ç–∏—è –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞. 
    –í —Å–ª—É—á–∞–µ –æ—Ç–∫–∞–∑–∞ –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω./n/n
    –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –ø–æ–¥–ª–µ–Ω–Ω—Å—Ç—å —Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º –∏—Ö QR-–∫–æ–¥–∞. 
    –ü–æ—Å–ª–µ —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –≤–∞–º –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞—è–≤–∫–µ, –∏ –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã—Ç.`.format(), state.options);
}

module.exports = offersMenageOptions;