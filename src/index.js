// dev
require('dotenv').config();
require('module-alias/register');

//–æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏
const express = require('express');

// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –º–æ–¥—É–ª–∏
const { initServices } = require('./services');
const writeInLogFile = require('@utils/logging.js');
const createButtons = require('@utils/create-buttons.js');
const decodeCommand = require('@other/decode-command.js');

//–æ—Å–Ω–æ–≤–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const PORT = process.env.PORT || 3030;
const ADMIN_TELEGRAM_ID = Number(process.env.ADMIN_TELEGRAM_ID);

const { CONFIG_FILE } = require('@consts/file-paths');
const config = require(CONFIG_FILE);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
const app = express();

initServices().then(async () => {
    writeInLogFile("debug log");
    const { getServices } = require('@services');
    const { bot, states, db } = getServices();

    // –ú–æ–¥—É–ª–∏, –∑–∞–¥–µ–π—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Ä–≤–∏—Å—ã
    const {
        initMailingsTimers
    } = require('./helpers/mailing/mailings');

    const handleCommand = require('./helpers/other/handle-command');
    const authUser = require('./helpers/other/auth-user');


    const handleMerchMenagment = require('./helpers/merch/handle-merch-menagment');

    const handleMailMenagment = require('./helpers/mailing/handle-mail-menagment');

    const handleDiscountMenagment = require('./helpers/discount/handle-discount-menagment');

    const handleStartMessagePage = require('./helpers/pages/handle-start-message-page');
    const handlePaymentPage = require('./helpers/pages/handle-payment-page');
    const handleAboutUsPage = require('./helpers/pages/handle-about-us-page');

    const handleJoinEvent = require('./helpers/event/handle-join-event');
    const handleEditDiscount = require('./helpers/discount/handle-edit-discount');
    
    const eventsMenageOptions = require('./helpers/event/events-menage-options');
    const eventOffersList = require('./helpers/event/event-offers-list');
    const handleEventMenagement = require('./helpers/event/handle-event-menagement');
    const confirmNewEvent = require('./helpers/event/confirm-new-event');
    const notifyEvent = require('./helpers/event/notify-event');
    const deleteEvent = require('./helpers/event/delete-event');
    const eventsList = require('./helpers/event/events-list');
    const selectEventToJoin = require('./helpers/event/select-event-to-join');
    const confirmJoinEvent = require('./helpers/event/confirm-join-event');
    const handleStatistics = require('./helpers/other/handle-statistics');

    const rafflesMenageOptions = require('./helpers/raffle/raffles-menage-options');
    const raffleOffersList = require('./helpers/raffle/raffle-offers-list');
    const handleRaffleMenagement = require('./helpers/raffle/handle-raffle-menagement');
    const confirmNewRaffle = require('./helpers/raffle/confirm-new-raffle');
    const notifyRaffle = require('./helpers/raffle/notify-raffle');
    const deleteRaffle = require('./helpers/raffle/delete-raffle');
    const raffleList = require('./helpers/raffle/raffle-list');
    const selectRaffleToJoin = require('./helpers/raffle/select-raffle-to-join');
    const confirmJoinRaffle = require('./helpers/raffle/confirm-join-raffle');

    const myParticipationsHandler = require('./helpers/other/my-participations-handler');

    const offersMenageOptions = require('./helpers/offer/offers-menage-options');
    const merchMenageOptions = require('./helpers/merch/merch-menage-options');
    const deleteMerch = require('./helpers/merch/delete-merch');
    const confirmNewMerch = require('./helpers/merch/confirm-new-merch');
    const notifyMerch = require('./helpers/merch/notify-merch');

    const mailingsMenageOptions = require('./helpers/mailing/mailings-menage-options');
    const confirmNewMail = require('./helpers/mailing/confirm-new-mail');
    const deleteMail = require('./helpers/mailing/delete-mail');

    const giftMenageOptions = require('./helpers/discount/gift-menage-options');
    const confirmNewDiscount = require('./helpers/discount/confirm-new-discount');
    const deleteDiscount = require('./helpers/discount/delete-discount');

    const confirmOffer = require('./helpers/offer/confirm-offer');
    const deleteOffer = require('./helpers/offer/delete-offer');

    const pagesMenageOptions = require('./consts/pages-menage-options');
    const confirmStartMessage = require('./helpers/pages/confirm-start-message');
    const confirmAboutUs = require('./helpers/pages/confirm-about-us');

    const confirmPaymentPage = require('./helpers/pages/confirm-payment-page');
    const myMerchOffer = require('./helpers/merch/my-merch-offer');
    const userMerchHandler = require('./helpers/merch/user-merch-handler');
    const offerMerch = require('./helpers/merch/offer-merch');
    const confirmOfferMerch = require('./helpers/merch/confirm-offer-merch');
    const menageUserGifts = require('./helpers/discount/menage-user-gifts');

    //–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥
    bot.on('message', async (msg) => {
        const chatId = msg.chat.id;

        try {

            let invited_by_key;

            //–∫–æ–Ω—Ç—Ä–æ–ª—å –∫–æ–º–∞–Ω–¥—ã
            if (msg.text && msg.text.indexOf('/start ') !== -1) {
                const commandData = decodeCommand(msg.text);
                if (!commandData.invited_by && chatId === ADMIN_TELEGRAM_ID) {
                    return await handleCommand(commandData);
                }
                else {
                    invited_by_key = commandData.invited_by;
                }
            }

            //–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const authResult = await authUser(msg.from, invited_by_key);

            //–Ω–µ–¥–∞—É—á–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤—ã—Ö–æ–¥
            if (authResult instanceof Error) return;

            //–ø–æ–∏—Å–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            let state = states.find(state => state.chatId === chatId);

            //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if (authResult) {

                //—á–∞—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                if (state.chatId === ADMIN_TELEGRAM_ID) {
                    return await bot.sendMessage(chatId, '*–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω* ‚úîÔ∏è\n\n–í–∞–º –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è üëá', state.options);
                }

                return await bot.sendMessage(chatId, config.start_message.format(), state.options);
            }

            // --- –ë–ª–æ–∫ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ ---

            //–≤–≤–æ–¥ –Ω–æ–≤–æ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞
            if (state.action === 'add raffle') {
                return handleRaffleMenagement(state, msg.text);
            }

            //–≤–≤–æ–¥ –Ω–æ–≤–æ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞
            if (state.action === 'join raffle') {
                return selectRaffleToJoin(state, msg.text);
            }
            
            //–≤–≤–æ–¥ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—å—Ç–∏—è
            if (state.action === 'add event') {
                return handleEventMenagement(state, msg.text);
            }

            //–≤–≤–æ–¥ –Ω–æ–≤–æ–≥–æ –º–µ—Ä—á–∞
            if (state.action === 'add merch') {
                return handleMerchMenagment(state, msg.text);
            }

            //–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏
            if (state.action === 'add mail') {
                return await handleMailMenagment(state, msg.text);
            }

            //–æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–π —Å–∫–∏–¥–∫–∏
            if (state.action === 'add discount') {
                return await handleDiscountMenagment(state, msg.text);
            }

            //–∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            if (state.action === 'edit start_message' && state.stepName === 'content') {
                return await handleStartMessagePage(state, msg.text);
            }
            //–∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ–ø–ª–∞—Ç—ã
            if (state.action === 'edit payment_page' && state.stepName === 'content') {
                return await handlePaymentPage(state, msg.text);
            }

            //–∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤–∫–ª–¥–∞–∫–∏ "–æ –Ω–∞—Å"
            if (state.action === 'edit about_us' && state.stepName === 'content') {
                return await handleAboutUsPage(state, msg.text);
            }

            //—É—á–∞—Å—Ç–∏–µ –≤ —Å–æ–±—ã—Ç–∏–∏
            if (state.action === 'join event') {
                return await handleJoinEvent(state, msg.text);
            }

            //–∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏
            if (state.action === 'set inv_discount') {
                return await handleEditDiscount(state, msg.text);
            }

            //—Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –Ω–∞—á–∞–ª–µ –¥–∏–∞–ª–æ–≥–∞
            if (msg.text === '/start' && state) {
                return await bot.sendMessage(chatId, '–í—ã —É–∂–µ –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥ ‚úîÔ∏è', state.options);
            }

            //–ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await bot.sendMessage(chatId, '‚ùì–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞', state.options);
        }
        catch (err) {
            writeInLogFile(err);
            bot.sendMessage(chatId, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ ‚úä');
        }
    })

    //–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    bot.on('callback_query', callback_handler);

    //–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
    async function callback_handler(msg) {
        let chatId = msg.message.chat.id, state;

        try {

            //—Å—Ü–µ–Ω–∞—Ä–∏–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            const authResult = await authUser(msg.from);

            //–Ω–µ–¥–∞—É—á–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤—ã—Ö–æ–¥
            if (authResult instanceof Error) return;

            //–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
            state = states.find(state => state.chatId === chatId);

            //–ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π
            if (authResult) {

                //—á–∞—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                if (chatId === ADMIN_TELEGRAM_ID) {
                    return await bot.sendMessage(chatId, '*–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω* ‚úîÔ∏è\n\n–í–∞–º –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è üëá', state.options);
                }

                return await bot.sendMessage(chatId, config.start_message.format(), state.options);
            }

            // ---------------------------- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ -----------------------------

            //–≤–∫–ª–∞–¥–∫–∞ "—Å–æ–±—ã—Ç–∏—è"
            if (msg.data === 'menage events' && state.action === 'default') {
                return await eventsMenageOptions(state);
            }

            //—É–¥–∞–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
            if (msg.data.indexOf('DeleteEvent') !== -1 && state.action === 'default') {
                const eventId = msg.data.split('=')[1];
                return await deleteEvent(state, eventId);
            }

            //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
            if (msg.data.indexOf('EditEvent') !== -1 && state.action === 'default') {
                const eventId = msg.data.split('=')[1];

                const existEvent = await db.find('events', [[{ field: 'id', exacly: eventId }]], true);

                if (!existEvent) {
                    return await bot.sendMessage(chatId, '*–°–æ–±—ã—Ç–∏–µ –Ω–µ –Ω–∞–∏ÃÜ–¥–µ–Ω–æ* ‚úä', { parse_mode: 'Markdown' });
                }

                state.data.replaceEventId = eventId;
                msg.data = 'add event';
                return callback_handler(msg);
            }

            //–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
            if (msg.data === 'add event' && state.action === 'default') {
                //—Å—Ü–µ–Ω–∞—Ä–∏–π –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
                state.action = 'add event';

                //–∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã            
                const buttons = createButtons([{
                    text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
                    data: 'main menu'
                }])

                state.recordStep('name', '‚Ñπ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è', buttons);
                return state.executeLastStep();
            }

            //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
            if (msg.data === 'confirm new event' && state.action === 'add event') {
                return await confirmNewEvent(state);
            }

            //—Ä–∞—Å—Å—ã–ª–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
            if (msg.data === 'notify' && state.action === 'add event') {
                return await notifyEvent(state);
            }

            // ---------------------------- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ -----------------------------

            //–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞
            if (msg.data === 'add raffle' && state.action === 'default') {
                //—Å—Ü–µ–Ω–∞—Ä–∏–π –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
                state.action = 'add raffle';

                //–∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã            
                const buttons = createButtons([{
                    text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
                    data: 'main menu'
                }])

                state.recordStep('name', '‚Ñπ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞', buttons);
                return state.executeLastStep();
            }

            //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
            if (msg.data === 'confirm new raffle' && state.action === 'add raffle') {
                return await confirmNewRaffle(state);
            }

            //—Ä–∞—Å—Å—ã–ª–∫–∞ –Ω–æ–≤–æ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞
            if (msg.data === 'notify raffle' && state.action === 'add raffle') {
                return await notifyRaffle(state);
            }

            //—É–¥–∞–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
            if (msg.data.indexOf('DeleteRaffle') !== -1 && state.action === 'default') {
                const raffleId = msg.data.split('=')[1];
                return await deleteRaffle(state, raffleId);
            }

            // ---------------------------- –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ -----------------------------

            //—à–∞–≥ –Ω–∞–∑–∞–¥ –≤ —Å—Ü–µ–Ω–∞—Ä–∏–∏
            if (msg.data === 'step back' && state.action !== 'default' && state._steps.length > 1) {
                state.stepBack();
                state._actionHandleFunction(state);
                return;
            }

            // ---------------------------- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ -----------------------------

            //–≤–∫–ª–∞–¥–∫–∞ "—Å–æ–±—ã—Ç–∏—è"
            if (msg.data === 'menage raffles' && state.action === 'default') {
                return await rafflesMenageOptions(state);
            }

            //–ø–æ–∫–∞–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
            if (msg.data.indexOf('RaffleOffers') !== -1 && state.action === 'default') {
                const raffleId = msg.data.split('=')[1];
                return await raffleOffersList(state, raffleId);
            }

            //–û—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–∑–æ–≤
            if (msg.data === 'clean prizes' && state.action === 'add raffle' && state.data.newRaffleData.prizes.length) {
                state.data.newRaffleData.prizes = [];
                await bot.sendMessage(chatId, "–ü—Ä–∏–∑—ã –æ—á–∏—â–µ–Ω—ã ‚úîÔ∏è");

                return state.executeLastStep();
            }

            //–í—ã–±–æ—Ä –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π
            if (msg.data.indexOf('RaffleWinner') !== -1 && state.action === 'default') {
                const raffleId = msg.data.split('=')[1];
                
                //–∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã            
                const buttons = createButtons([{
                    text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
                    data: 'main menu'
                }])

                const prizes = await db.find('winners');
                state.action = "select raffle winner"
                state.recordStep("winner number", `
                    ‚ÑπÔ∏è *–û—Å—Ç–∞–ª–æ—Å—å –ø—Ä–∏–∑–æ–≤—ã—Ö –º–µ—Å—Ç: ${prizes.length}. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –±–∏–ª–µ—Ç–∞ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –∏ –Ω–æ–º–µ—Ä –º–µ—Å—Ç–∞, –∫ –ø—Ä–∏–º–µ—Ä—É:*/n/n
                    13:1 *(–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç 13 –±–∏–ª–µ—Ç –∑–∞–Ω—è—Ç 1 –º–µ—Å—Ç–æ)/n/n
                    üì® –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è, –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª–∏*`
                    .format(),buttons);

                return state.executeLastStep();
            }

            // ---------------------------- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ -----------------------------

            //—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
            if (msg.data === 'stats' && state.action === 'default') {
                return await handleStatistics(state);
            }

            // ---------------------------- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º -----------------------------

            if (msg.data === 'menage offers' && state.action === 'default') {
                return await offersMenageOptions(state);
            }

            // ---------------------------- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ä—á–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç–∞—Ä—Ç–æ—Ä–æ–º -----------------------------

            //–≤–∫–ª–∞–¥–∫–∞ "–ú–µ—Ä—á–∏"
            if (msg.data === 'menage merch' && state.action === 'default') {
                return await merchMenageOptions(state);
            }

            //—É–¥–∞–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
            if (msg.data.indexOf('DeleteMerch') !== -1 && state.action === 'default') {
                const merchId = msg.data.split('=')[1];
                return await deleteMerch(state, merchId);
            }

            //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
            if (msg.data.indexOf('EditMerch') !== -1 && state.action === 'default') {

                const merchId = msg.data.split('=')[1];

                //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –º–µ—Ä—á–∞
                const existMerch = await db.find('merch', [[{ field: 'id', exacly: merchId }]], true);

                if (!existMerch) {
                    return await bot.sendMessage(state.chatId, '*–ú–µ—Ä—á –Ω–µ –Ω–∞–π–¥–µ–Ω* ‚úä', { parse_mode: 'Markdown' });
                }

                state.data.replaceMerchId = merchId;
                msg.data = 'add merch';
                return callback_handler(msg);
            }

            //–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
            if (msg.data === 'add merch' && state.action === 'default') {
                //—Å—Ü–µ–Ω–∞—Ä–∏–π –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
                state.action = 'add merch';

                //–∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã            
                const buttons = createButtons([{
                    text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
                    data: 'main menu'
                }])

                state.recordStep('name', '‚Ñπ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä—á–∞', buttons);
                return state.executeLastStep();
            }

            //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
            if (msg.data === 'confirm new merch' && state.action === 'add merch') {
                return await confirmNewMerch(state);
            }

            //—Ä–∞—Å—Å—ã–ª–∫–∞ –Ω–æ–≤–æ–≥–æ –º–µ—Ä—á–∞
            if (msg.data === 'notify' && state.action === 'add merch') {
                return await notifyMerch(state);
            }

            // ---------------------------- –£—á–∞—Å—Ç–Ω–∏–∫–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç–∞—Ä—Ç–æ—Ä -----------------------------

            //–ø–æ–∫–∞–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
            if (msg.data.indexOf('EventOffers') !== -1 && state.action === 'default') {
                const eventId = msg.data.split('=')[1];
                return await eventOffersList(state, eventId);
            }

            // ---------------------------- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç–∞—Ä—Ç–æ—Ä -----------------------------

            //–≤–∫–ª–∞–¥–∫–∞ "—Ä–∞—Å—Å—ã–ª–∫–∏"
            if (msg.data === 'menage notify' && state.action === 'default') {
                return await mailingsMenageOptions(state);
            }

            //—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏
            if (msg.data === 'add mail' && state.action === 'default') {
                state.action = 'add mail';

                const sendingMess = `üì® *–í–≤–µ–¥–∏—Ç–µ —Ç–∏–ø —Ä–∞—Å—Å—ã–ª–∫–∏*/n/n
                    *–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è* ‚Äî –ø–æ—Å—Ç–æ—è–Ω–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—Ä–æ–º–∏–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏/n/n
                    *–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è* ‚Äî —Ä–∞–∑–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è/n/n
                    *–ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è* ‚Äî —Ä–∞–∑–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å—Ä–∞–∑—É
                `.format();

                //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
                state.recordStep('send type', sendingMess, createButtons([{
                    text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
                    data: 'main menu'
                }]));

                return state.executeLastStep();
            }

            //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏
            if (msg.data === 'confirm new mail' && state.action === 'add mail') {
                return await confirmNewMail(state);
            }

            //—É–¥–∞–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
            if (msg.data.indexOf('DeleteMail') !== -1 && state.action === 'default') {
                const merchId = msg.data.split('=')[1];
                return await deleteMail(state, merchId);
            }

            //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
            if (msg.data.indexOf('EditMail') !== -1 && state.action === 'default') {
                const mailingId = msg.data.split('=')[1];

                //–ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏
                const existMailing = await db.find('mailings', [[{
                    field: 'id',
                    exacly: mailingId
                }]], true);

                if (!existMailing) return bot.sendMessage(chatId, '*–†–∞—Å—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–∏ÃÜ–¥–µ–Ω–∞* ‚úä', { parse_mode: 'Markdown' });

                msg.data = 'add mail';
                state.data.replaceMailingId = mailingId;
                return callback_handler(msg);
            }

            // ---------------------------- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç–∞—Ä—Ç–æ—Ä -----------------------------

            //—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
            if (msg.data === 'menage gifts' && state.action === 'default') {
                return await giftMenageOptions(state);
            }

            //—Å–æ–∑–¥–∞–Ω–∏–µ
            if (msg.data === 'add discount' && state.action === 'default') {
                state.action = 'add discount';

                state.recordStep('name', '‚Ñπ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∫–∏–¥–∫–∏', createButtons([{
                    text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
                    data: 'main menu'
                }]))

                return state.executeLastStep();
            }

            //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏
            if (msg.data === 'confirm new discount' && state.action === 'add discount') {
                return await confirmNewDiscount(state);
            }

            //—É–¥–∞–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–æ–≥–æ —Å–∫–∏–¥–∫–∏
            if (msg.data.indexOf('DeleteDiscount') !== -1 && state.action === 'default') {
                const discountId = msg.data.split('=')[1];
                return await deleteDiscount(state, discountId);
            }

            //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏
            if (msg.data.indexOf('EditDiscount') !== -1 && state.action === 'default') {
                const discountId = msg.data.split('=')[1];

                //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å–∫–∏–¥–∫–∏
                const discount = await db.find('discounts', [[{
                    field: 'id',
                    exacly: discountId
                }]], true);

                if (!discount) {
                    return await bot.sendMessage(state.chatId, '*–°–∫–∏–¥–∫–∞ –Ω–µ –Ω–∞–∏ÃÜ–¥–µ–Ω–∞ ‚úä*', { parse_mode: 'Markdown' });
                }

                state.data.replaceDiscountId = discountId;

                msg.data = 'add discount';
                return callback_handler(msg);
            }

            // ---------------------------- –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä -----------------------------

            //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            if (msg.data.indexOf('AcceptOffer') !== -1) {
                const offerValue = msg.data.split('=')[1];
                const [offerType, offerId] = offerValue.split(':');
                return await confirmOffer(state, offerType, offerId);
            }

            //–£–¥–∞–ª–µ–Ω–∏–µ
            if (msg.data.indexOf('DeleteOffer') !== -1) {
                const offerValue = msg.data.split('=')[1];
                const [offerType, offerId] = offerValue.split(':');
                return await deleteOffer(state, offerType, offerId);
            }

            // ---------------------------- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç–∞—Ä—Ç–æ—Ä -----------------------------

            //–≤–∫–ª–∞–¥–∫–∞ "—Å—Ç—Ä–∞–Ω–∏—Ü—ã"
            if (msg.data === 'menage pages' && state.action === 'default') {
                return await pagesMenageOptions(state);
            }

            //–∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
            if (msg.data === 'edit start_message' && state.action === 'default') {
                state.action = 'edit start_message';

                state.recordStep('content', '‚Ñπ –í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', createButtons([{
                    text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
                    data: 'main menu'
                }]))

                return state.executeLastStep();
            }

            //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
            if (msg.data === 'confirm start_message' && state.action === 'edit start_message') {
                return await confirmStartMessage(state);
            }

            //–∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–û –Ω–∞—Å"
            if (msg.data === 'edit about_us' && state.action === 'default') {
                state.action = 'edit about_us';

                state.recordStep('content', '‚Ñπ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ "–û –Ω–∞—Å"', createButtons([{
                    text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
                    data: 'main menu'
                }]))

                return state.executeLastStep();
            }

            //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–û –Ω–∞—Å"
            if (msg.data === 'confirm about_us' && state.action === 'edit about_us') {
                return await confirmAboutUs(state);
            }

            //–∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–û–ø–ª–∞—Ç–∞"
            if (msg.data === 'edit payment_page' && state.action === 'default') {
                state.action = 'edit payment_page';

                state.recordStep('content', '‚Ñπ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–û–ø–ª–∞—Ç–∞"', createButtons([{
                    text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
                    data: 'main menu'
                }]))

                return state.executeLastStep();
            }

            //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–û–ø–ª–∞—Ç–∞"
            if (msg.data === 'confirm payment_page' && state.action === 'edit payment_page') {
                return await confirmPaymentPage(state);
            }

            //–∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏ –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
            if (msg.data === 'edit inv_discount' && state.action === 'default') {
                state.action = 'set inv_discount';
                state.options = createButtons([{ text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é üîô', data: 'main menu' }]);

                return await bot.sendMessage(chatId, `‚Ñπ *–í–≤–µ–¥–∏—Ç–µ —Å–∫–∏–¥–∫—É –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ*/n/n
                –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ=${config.invite_discount} –ü—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–º—É=${config.for_invited_discount}
                `.format(), state.options);
            }

            // ---------------------------- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ----------------------------

            //–æ–±—Ä–∞–±–æ—Ç–∫–∞ –º–æ–∏—Ö –º–µ—Ä—á–µ–π
            if (msg.data === 'my merch' && state.action === 'default') {
                return await myMerchOffer(state);
            }

            //–≤–∫–ª–∞–¥–∫–∞ "–ë–ª–∏–∂–∞–π—â–∏–µ —Å–æ–±—ã—Ç–∏—è"
            if (msg.data === 'events' && state.action === 'default') {
                await raffleList(state);
                await eventsList(state);

                // —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–æ–∑–≤—Ä–∞—Ç–æ–º –≤ –º–µ–Ω—é
                return await bot.sendMessage(
                    state.chatId,
                    '‚Ñπ –ß—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ–±—ã—Ç–∏–µ –∏ –ø–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É üëá',
                    createButtons([{ text: '–ù–∞ –≥–ª–∞–≤–Ω—É—é üîô', data: 'main menu' }])
                );
            }

            //—É—á–∞—Å—Ç–∏–µ –≤ —Å–æ–±—ã—Ç–∏–∏
            if (msg.data.indexOf('JoinEvent') !== -1 && state.action === 'default') {
                const eventId = msg.data.split('=')[1];
                return await selectEventToJoin(state, eventId);
            }

            //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É—á–∞—Å—Ç–∏—è –≤ —Å–æ–±—ã—Ç–∏–∏
            if (msg.data === 'confirm join_event' && state.action === 'join event') {
                state.data.username = msg.from.username;
                return await confirmJoinEvent(state);
            }

            // ------------------------------------ –†–æ–∑—ã–≥—Ä—ã—à –∑–∞—è–≤–∫–∞ ------------------------------------------

            //—É—á–∞—Å—Ç–∏–µ –≤ —Å–æ–±—ã—Ç–∏–∏
            if (msg.data.indexOf('JoinRaffle') !== -1 && state.action === 'default') {
                const raffleId = msg.data.split('=')[1];

                //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—á–∞—Å—Ç–∏–µ –∏–ª–∏ –ø–æ–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏
                const existOffer = await db.find('raffle_offers', [[{
                    field: 'user_telegram_id',
                    exacly: state.chatId
                }, {
                    field: 'raffle_id',
                    exacly: raffleId
                }]], true);

                if (existOffer) {
                    state.default();
                    return await bot.sendMessage(state.chatId, '*‚ÑπÔ∏è –í—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —ç—Ç–æ–º —Å–æ–±—ã—Ç–∏–∏*', state.options);
                }

                state.action = 'join raffle';
                state.recordStep('fullname', "‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –§–∞–º–∏–ª–∏—é, –∏–º—è, –æ—Ç—á–µ—Å—Ç–≤–æ (–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏)", createButtons([{
                    text: '–û—Ç–º–µ–Ω–∏—Ç—å ‚úñÔ∏è',
                    data: 'main menu'
                }]));

                state.data.raffleId = raffleId;
                return state.executeLastStep();
            }

            //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ
            if (msg.data === 'confirm join_raffle' && state.action === 'join raffle') {
                return await confirmJoinRaffle(state);
            }

            // ------------------------------------ —É—á–∞—Å—Ç–∏–∫–∞–º ------------------------------------------

            //–≤–∫–ª–∞–¥–∫–∞ "–£—á–∞—Å—Ç–Ω–∏–∫–∞–º"
            if (msg.data === 'member' && state.action === 'default') {
                return await myParticipationsHandler(state);
            }

            //–≤–∫–ª–∞–¥–∫–∞ "–ú–æ–∏ –º–µ—Ä—á–∏"
            if (msg.data === 'merch' && state.action === 'default') {
                return await userMerchHandler(state);
            }

            //–∑–∞–∫–∞–∑ –º–µ—Ä—á–∞
            if (msg.data.indexOf('OfferMerch') !== -1 && state.action === 'default') {
                state.action = 'offer merch';
                return await offerMerch(state, msg.data.split('=')[1]);
            }

            //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –º–µ—Ä—á–∞
            if (msg.data === 'confirm' && state.action === 'offer merch') {
                state.data.username = msg.from.username;
                return await confirmOfferMerch(state);
            }

            //–≤–∫–ª–∞–¥–∫–∞ "–ú–æ–∏ –±–æ–Ω—É—Å—ã"
            if (msg.data === 'gifts') {
                return await menageUserGifts(state);
            }

            //–≤–∫–ª–∞–¥–∫–∞ "–æ –Ω–∞—Å"
            if (msg.data === 'about') {
                return bot.sendMessage(chatId, config.about_us.format(), state.options);
            }

            //–≤–∫–ª–∞–¥–∫–∞ "–ì–ª–∞–≤–Ω–∞—è"
            if (msg.data === 'main menu') {
                state.default();
                return bot.sendMessage(chatId, '–í—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ üëá', state.options);
            }

        }
        catch (err) {
            bot.sendMessage(chatId, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ ‚úä');
            writeInLogFile(err);
        }
    }

    //–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
    app.listen(PORT, '0.0.0.0', async () => {
        console.clear();
        // await initConnection();
        await initMailingsTimers();
        writeInLogFile(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT} ‚ú®`);
    });
});

//—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫
String.prototype.format = function () {
    return this.replace(/ {2,}/g, ' ').replace(/((?=\n)\s+)|\n/g, '').replace(/\/n/g, '\n');
}
